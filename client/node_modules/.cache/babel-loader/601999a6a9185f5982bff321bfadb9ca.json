{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/to_do_react/to_do_list/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Emoji = props => /*#__PURE__*/React.createElement(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": props.label ? props.label : \"\",\n  \"aria-hidden\": props.label ? \"false\" : \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, props.symbol);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        text: \"Buy eggs\",\n        notes: 'empty',\n        done: false,\n        toggle: false\n      }, {\n        text: \"Buy milk\",\n        notes: 'empty',\n        done: true,\n        toggle: false\n      }],\n      input: '',\n      textInput: '',\n      newList: [],\n      modal: false,\n      modalContent: [],\n      modalIndex: null,\n      modalInput: \"\",\n      modalTextInput: '',\n      toggle: false\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      });\n    };\n\n    this.onModalInputChange = event => {\n      this.setState({\n        modalInput: event.target.value\n      });\n    };\n\n    this.onModalTextInputChange = event => {\n      this.setState({\n        modalTextInput: event.target.value\n      });\n    };\n\n    this.onClicked = () => {\n      if (this.state.input) {\n        console.log(this.state.input);\n        this.setState(prevState => ({\n          list: [...prevState.list, {\n            text: this.state.input,\n            notes: this.state.textInput,\n            done: false,\n            toggle: false\n          }]\n        })); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.list);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        });\n      }\n    };\n\n    this.deleteItem = index => {\n      let arr = this.state.list;\n      arr.splice(index, 1);\n      this.setState({\n        list: arr\n      });\n      console.log(this.state.list.length);\n    };\n\n    this.changeToDone = index => {\n      console.log(this.state.list[index].done);\n      let list = this.state.list;\n      let done = this.state.list[index];\n\n      if (done.done === false) {\n        done.done = true;\n        console.log(done.done);\n      } else {\n        done.done = false;\n        console.log(done.done);\n      }\n\n      this.setState({\n        list\n      });\n    };\n\n    this.showModal = index => {\n      console.log(index);\n      this.setState({\n        modal: true\n      });\n      let modalList = this.state.list[index];\n      this.state.modalContent = modalList;\n      this.setState({\n        modalIndex: index\n      });\n      this.setState({\n        modalContent: modalList\n      });\n      this.setState({\n        modalInput: this.state.modalContent.text\n      });\n      this.setState({\n        modalTextInput: this.state.modalContent.notes\n      });\n      console.log(this.state.modalInput);\n    };\n\n    this.onEdit = index => {\n      if (this.state.modalInput) {\n        let list = this.state.list;\n        list.splice(index, 1, {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false\n        });\n        this.setState({\n          list\n        });\n        console.log(index);\n        this.setState({\n          modal: false\n        });\n      }\n    };\n\n    this.onToggle = index => {\n      console.log(this.state.list[index]);\n      let list = this.state.list;\n      let toggle = list[index];\n\n      if (toggle.toggle === false) {\n        toggle.toggle = true;\n      } else {\n        toggle.toggle = false;\n      }\n\n      console.log(toggle.toggle);\n      this.setState({\n        list\n      });\n      console.log(this.state.list);\n    };\n  }\n\n  componentDidUpdate() {\n    // Storing to local storage\n    console.log(this.state.list);\n    const list = this.state.list;\n    localStorage.setItem(\"todolist\", JSON.stringify(list)); // Retrieving from local storage\n\n    const listString = localStorage.getItem(\"todolist\");\n\n    if (listString) {\n      // list exists\n      const list = JSON.parse(listString);\n      this.setState({\n        list: list\n      });\n      console.log(this.state.list);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"To Do List\"), this.state.list != 0 ? this.state.list.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, todo.text, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 77\n      }\n    }) : '❌'), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"toggle\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, todo.toggle ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 109\n      }\n    }, this.state.list[index].notes) : ''), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"Nothing to do\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"todo-item\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 119\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 128\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"30\",\n      value: this.state.textInput,\n      onChange: this.onTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"todo-button\",\n      onClick: () => this.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"modal-tex\",\n      value: this.state.modalInput,\n      onChange: this.onModalInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"30\",\n      onChange: this.onModalTextInputChange,\n      value: this.state.modalTextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, this.state.modalTextInput), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onEdit(this.state.modalIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default App; // <input type='text' className='modal-tex' value={this.state.list[this.state.modalIndex].text} onChange={this.onModalInputChange}></input>\n// <input type='submit' className='todo-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</input>","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/to_do_react/to_do_list/src/App.js"],"names":["React","Component","Emoji","props","label","symbol","App","state","list","text","notes","done","toggle","input","textInput","newList","modal","modalContent","modalIndex","modalInput","modalTextInput","onInputChange","event","setState","target","value","onTextInputChange","onModalInputChange","onModalTextInputChange","onClicked","console","log","prevState","deleteItem","index","arr","splice","length","changeToDone","showModal","modalList","onEdit","onToggle","componentDidUpdate","localStorage","setItem","JSON","stringify","listString","getItem","parse","render","map","todo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\n\n\n\nclass App extends Component{\n\n\nstate = {\n  list: [{text: \"Buy eggs\", notes:'empty',done: false,toggle:false},\n  {text: \"Buy milk\", notes:'empty',done: true,toggle:false},\n  ],\n  input: '',\n  textInput:'',\n  newList: [],\n  modal:false,\n  modalContent:[],\n  modalIndex:null,\n  modalInput:\"\",\n  modalTextInput:'',\n  toggle:false\n  }\nonInputChange = (event) => {\n\n  this.setState({input:event.target.value})\n}\nonTextInputChange = (event) => {\n  this.setState({textInput:event.target.value})\n}\nonModalInputChange = (event) => {\n\n  this.setState({modalInput:event.target.value})\n}\nonModalTextInputChange = (event) => {\n  this.setState({modalTextInput:event.target.value})\n}\nonClicked = () => {\n  if(this.state.input){\n      console.log(this.state.input)\n      this.setState(prevState => ({\n        list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false}]\n      }))\n      // this.state.list.push({text:this.state.input, done: false})\n      console.log(this.state.list)\n      this.setState({input:''})\n      this.setState({textInput:''})\n\n  }\n}\n// componentDidMount = () => {\n//   let newData = this.state.list\n//   this.setState({newList:newData})\n//   console.log(this.state.newList)\n//   this.forceUpdate()\n// }\ndeleteItem = (index) => {\n  let arr = this.state.list\n  arr.splice(index,1)\n  this.setState({list:arr})\n  console.log(this.state.list.length)\n  \n}\nchangeToDone = (index) => {\n  console.log(this.state.list[index].done)\n  let list = this.state.list\n  let done = this.state.list[index]\n  \n  if(done.done === false){\n    done.done = true\n    console.log(done.done)\n  }\n  else{\n    done.done = false\n    console.log(done.done)\n  }\n  \n  this.setState({list})\n}\nshowModal = index => {\n  console.log(index)\n  this.setState({modal:true})\n  let modalList = (this.state.list[index])\n  this.state.modalContent = modalList\n  this.setState({modalIndex:index})\n  this.setState({modalContent : modalList})\n  this.setState({modalInput : this.state.modalContent.text})\n  this.setState({modalTextInput:this.state.modalContent.notes})\n  console.log(this.state.modalInput)\n}\nonEdit = (index) => {\n  if(this.state.modalInput){\n      let list = this.state.list\n      list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false})\n      this.setState({list})\n      console.log(index)\n      this.setState({modal:false})\n  }\n}\n  onToggle = (index) => {\n    console.log(this.state.list[index])\n    let list = this.state.list\n    let toggle = list[index]\n    if(toggle.toggle === false){\n      toggle.toggle = true\n      \n    }\n    else{\n      toggle.toggle = false\n      \n    }\n    console.log(toggle.toggle)\n    this.setState({list})\n    console.log(this.state.list)\n  }\n  componentDidUpdate(){\n    // Storing to local storage\n      console.log(this.state.list)\n      const list = this.state.list;\n      localStorage.setItem(\"todolist\", JSON.stringify(list));\n      // Retrieving from local storage\n      const listString = localStorage.getItem(\"todolist\");\n      if (listString) { // list exists\n      const list = JSON.parse(listString);\n      this.setState({\n      list: list,\n      })\n      console.log(this.state.list);\n      }\n  }\n\nrender() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className = \"todo-list\">\n          <h1>To Do List</h1>         \n          {(this.state.list != 0)? (this.state.list.map((todo,index)=>\n              <div key={index} >\n                <div className = \"todo-item\">\n                <span onClick={()=> this.showModal(index)}>{todo.text} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji label=\"sheep\" symbol=\"✅\"/>:'❌'}</button>\n                <button className='delete' onClick={()=> this.deleteItem(index)}>Delete</button>\n                <button onClick={()=> this.onToggle(index)}>toggle</button>\n                </div>\n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?(<span>{this.state.list[index].notes}</span>):('')}</div>\n                <br></br>\n              </div>\n              \n              )):(<div>Nothing to do</div>)\n              }\n          <div className='input'>\n              <input type='text' className='todo-item' value={this.state.input} onChange={this.onInputChange}></input><br></br><br></br>\n              <textarea placeholder='add notes' name=\"message\" rows=\"3\" cols=\"30\" value={this.state.textInput} onChange={this.onTextInputChange}></textarea>\n              <br></br><br></br>\n              <input type='submit' className='todo-button' onClick={()=> this.onClicked()}></input>\n          </div>\n          <br></br>\n          <br></br>\n          {(this.state.modal)?(\n           <div className='modal'>\n              <input type='text' className='modal-tex' value={this.state.modalInput} onChange={this.onModalInputChange}></input>\n\n              <br></br>\n              <br></br>\n\n              <textarea placeholder='add notes' name=\"message\" rows=\"3\" cols=\"30\" onChange={this.onModalTextInputChange} value={this.state.modalTextInput}>{this.state.modalTextInput}</textarea>\n              <br></br>\n              <button onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</button>\n              \n           \n           </div>\n          ):(<div></div>)\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n\n\n// <input type='text' className='modal-tex' value={this.state.list[this.state.modalIndex].text} onChange={this.onModalInputChange}></input>\n\n// <input type='submit' className='todo-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</input>"]},"metadata":{},"sourceType":"module"}