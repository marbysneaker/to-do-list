{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nconst Emoji = props => /*#__PURE__*/React.createElement(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": props.label ? props.label : \"\",\n  \"aria-hidden\": props.label ? \"false\" : \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, props.symbol);\n\nvar date = new Date().toJSON().slice(5, 10);\nvar time = new Date().toJSON().slice(11, 16);\nvar dateTime = date + ' ' + time; // function sleep(ms) {\n//   return new Promise(resolve => setTimeout(resolve, ms));\n// }\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      grocery: [],\n      input: '',\n      textInput: '',\n      newList: [],\n      modal: false,\n      modalContent: [],\n      modalIndex: null,\n      modalInput: \"\",\n      modalTextInput: '',\n      toggle: false,\n      todoItemClicked: false,\n      todo: true,\n      active: 'todo',\n      todoListItems: 'todo-list-items',\n      user: {},\n      userIs: false,\n      registerUn: '',\n      registerPw: '',\n      userN: '',\n      userPw: '',\n      registered: [],\n      testRegister: [],\n      allUsers: [],\n      loggedIn: false,\n      registerError: null\n    };\n\n    this.onRegisterUn = event => {\n      this.setState({\n        registerUn: event.target.value\n      });\n    };\n\n    this.onRegisterPw = event => {\n      this.setState({\n        registerPw: event.target.value\n      });\n    };\n\n    this.onLoginUn = event => {\n      this.setState({\n        userN: event.target.value\n      });\n    };\n\n    this.onLoginPw = event => {\n      this.setState({\n        userPw: event.target.value\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      });\n    };\n\n    this.onModalInputChange = event => {\n      this.setState({\n        modalInput: event.target.value\n      });\n    };\n\n    this.onModalTextInputChange = event => {\n      this.setState({\n        modalTextInput: event.target.value\n      });\n    };\n\n    this.fetchUsers = () => {\n      let testusers = [];\n      fetch('/api/mongodb/users/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          allUsers: data\n        });\n        testusers.push(data);\n      });\n      this.setState({\n        allUsers: testusers\n      }, () => console.log(this.state.allUsers));\n    };\n\n    this.onFetch = () => {\n      let fetchUser = this.state.user.user;\n      let todoFetch = '/api/mongodb/' + fetchUser + 'todolist/';\n      console.log(todoFetch);\n      fetch(todoFetch).then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          list: data\n        });\n      });\n      fetch(`/api/mongodb/${fetchUser}grocery/`).then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          grocery: data\n        });\n        console.log(this.state.user);\n      });\n    };\n\n    this.onRegister = () => {\n      let userTaken = 'Username taken';\n      let userEmpty = 'Username is empty';\n      let passwordEmpty = 'Password is Empty';\n      let user = this.state.registerUn;\n      let pw = this.state.registerPw;\n      let formData = {\n        user: user,\n        password: pw\n      };\n      console.log(formData);\n      let userLogin = {};\n      userLogin = this.state.allUsers.map((user, index) => {\n        return userLogin[user.user] = user.password;\n      });\n\n      if (user === '') {\n        console.log('error1');\n        return this.setState({\n          registerError: userEmpty\n        });\n      }\n\n      if (Object.keys(userLogin).includes(user)) {\n        console.log('error2');\n        return this.setState({\n          registerError: userTaken\n        });\n      }\n\n      if (pw === '') {\n        console.log('error3');\n        return this.setState({\n          registerError: passwordEmpty\n        });\n      }\n\n      if (user !== '' && !Object.keys(userLogin).includes(user) && pw !== '') {\n        fetch('/api/mongodb/users/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        });\n        this.setState({\n          testRegister: formData\n        });\n        this.setState({\n          registerUn: ''\n        });\n        this.setState({\n          registerPw: ''\n        });\n      }\n    };\n\n    this.onSignIn = () => {\n      console.log('signIN');\n      console.log(this.state.userN);\n      let un = this.state.userN;\n      let pw = this.state.userPw;\n      console.log(this.state.allUsers);\n      let userLogin = {};\n      const user = this.state.allUsers.map((user, index) => {\n        return userLogin[user.user] = user.password;\n      });\n      console.log(userLogin);\n\n      if (Object.keys(userLogin).includes(un)) {\n        if (userLogin[un] === pw) {\n          console.log('log In');\n          user[un] = pw;\n          this.setState({\n            user: {\n              user: un,\n              password: pw\n            }\n          }, () => {\n            const userJSON = JSON.stringify(this.state.user);\n            localStorage.setItem('user', userJSON);\n            this.onFetch();\n          });\n          this.setState({\n            loggedIn: true\n          });\n        } else {\n          console.log('incorrect password');\n        }\n      } else {\n        console.log('username does not exist');\n      }\n\n      console.log(this.state.user);\n    };\n\n    this.onClicked = () => {\n      if (this.state.input && this.state.todo && this.state.user) {\n        console.log(this.state.input); // this.setState(prevState => ({\n        //   list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n        // }))\n\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch(`/api/mongodb/${this.state.user.user}todolist/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        }, () => this.onFetch());\n        console.log(this.state.list);\n      }\n\n      if (this.state.input && !this.state.todo) {\n        console.log('grocery');\n        console.log(this.state.input); // this.setState(prevState => ({\n        //   grocery: [...prevState.grocery, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n        // }))\n\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch(`/api/mongodb/${this.state.user.user}grocery/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.grocery);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        }, () => this.onFetch());\n      }\n    };\n\n    this.deleteItem = id => {\n      console.log(id);\n\n      if (this.state.todo) {\n        fetch(`/api/mongodb/${this.state.user.user}todolist/?_id=` + id, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log('deleted', id);\n          this.onFetch();\n        });\n      }\n\n      if (!this.state.todo) {\n        fetch(`/api/mongodb/${this.state.user.user}grocery/?_id=` + id, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log('deleted', id);\n          this.onFetch();\n        });\n      }\n    };\n\n    this.changeToDone = index => {\n      if (this.state.todo) {\n        console.log(this.state.list[index].done);\n        let list = this.state.list;\n        let done = this.state.list[index];\n\n        if (done.done === false) {\n          done.done = true;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-true';\n        } else {\n          done.done = false;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-false';\n        }\n\n        this.setState({\n          list\n        });\n      }\n\n      if (!this.state.todo) {\n        console.log(this.state.grocery[index].done);\n        let list = this.state.grocery;\n        let done = this.state.grocery[index];\n\n        if (done.done === false) {\n          done.done = true;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-true';\n        } else {\n          done.done = false;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-false';\n        }\n\n        this.setState({\n          grocery: list\n        });\n      }\n    };\n\n    this.showModal = index => {\n      if (this.state.todo) {\n        console.log(index);\n        this.setState({\n          modal: true\n        });\n        let modalList = this.state.list[index];\n        this.state.modalContent = modalList;\n        this.setState({\n          modalIndex: index\n        });\n        this.setState({\n          modalContent: modalList\n        });\n        this.setState({\n          modalInput: this.state.modalContent.text\n        });\n        this.setState({\n          modalTextInput: this.state.modalContent.notes\n        });\n        console.log(this.state.modalInput);\n      }\n\n      if (!this.state.todo) {\n        console.log(index);\n        this.setState({\n          modal: true\n        });\n        let modalList = this.state.grocery[index];\n        this.state.modalContent = modalList;\n        this.setState({\n          modalIndex: index\n        });\n        this.setState({\n          modalContent: modalList\n        });\n        this.setState({\n          modalInput: this.state.modalContent.text\n        });\n        this.setState({\n          modalTextInput: this.state.modalContent.notes\n        });\n        console.log(this.state.modalInput);\n      }\n    };\n\n    this.onEdit = index => {\n      if (this.state.modalInput && this.state.todo) {\n        let list = this.state.list[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch(`/api/mongodb/${this.state.user.user}todolist/?_id=` + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n\n      if (this.state.modalInput && !this.state.todo) {\n        let list = this.state.grocery[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch(`/api/mongodb/${this.state.user.user}grocery/?_id=` + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n    };\n\n    this.onToggle = index => {\n      if (this.state.todo) {\n        console.log(this.state.list[index]);\n        let list = this.state.list;\n        let toggle = list[index];\n\n        if (toggle.toggle === false) {\n          toggle.toggle = true;\n          toggle.todoItemClicked = 'todo-item-true';\n        } else {\n          toggle.toggle = false;\n          toggle.todoItemClicked = 'todo-item-false';\n        }\n\n        console.log(toggle.toggle);\n        this.setState({\n          list\n        });\n        console.log(this.state.list);\n      }\n\n      if (!this.state.todo) {\n        let list = this.state.grocery;\n        let toggle = list[index];\n\n        if (toggle.toggle === false) {\n          toggle.toggle = true;\n          toggle.todoItemClicked = 'todo-item-true';\n        } else {\n          toggle.toggle = false;\n          toggle.todoItemClicked = 'todo-item-false';\n        }\n\n        console.log(toggle.toggle);\n        this.setState({\n          grocery: list\n        });\n      }\n    };\n\n    this.fetchLocal = () => {\n      const userJSON = localStorage.getItem('user');\n      const user = JSON.parse(userJSON);\n      console.log(user);\n\n      if (user) {\n        this.setState({\n          user: user\n        }, () => this.onFetch());\n        console.log(this.state.user);\n        this.setState({\n          loggedIn: true\n        });\n      }\n    };\n\n    this.todo = todo => {\n      if (todo === 'todo') {\n        console.log('todo');\n        this.setState({\n          todo: true\n        });\n        this.setState({\n          active: todo\n        });\n        this.setState({\n          todoListItems: 'todo-list-items'\n        });\n      }\n\n      if (todo === 'grocery') {\n        console.log('todo');\n        this.setState({\n          todo: false\n        });\n        this.setState({\n          active: todo\n        });\n        this.setState({\n          todoListItems: 'todo-list-items grocery-true'\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    this.fetchLocal();\n    console.log(this.state.allUsers);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }\n    }, \"To Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.todoListItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }\n    }, this.state.list !== 0 && this.state.todo ? this.state.list.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.list[index].notes : ''))) : this.state.grocery.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item grocery-2\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.grocery[index].notes : '')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add todo item\",\n      className: \"input-item\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 147\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 156\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"input-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"20\",\n      value: this.state.textInput,\n      onChange: this.onTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"input-button\",\n      onClick: () => this.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      draggable: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"modal-text\",\n      value: this.state.modalInput,\n      onChange: this.onModalInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"modal-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"30\",\n      onChange: this.onModalTextInputChange,\n      value: this.state.modalTextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 15\n      }\n    }, this.state.modalTextInput), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"modal-button\",\n      onClick: () => this.onEdit(this.state.modalIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 15\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.active === 'todo' ? \"active\" : \"none\",\n      className: \"todo\",\n      onClick: () => this.todo('todo'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.active === 'grocery' ? \"active\" : \"none\",\n      className: \"grocery\",\n      onClick: () => this.todo('grocery'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }\n    }, \" Grocery\"), !this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"log-in\",\n      id: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }\n    }, \"Username\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"register-un\",\n      value: this.state.registerUn,\n      onChange: this.onRegisterUn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"register-pw\",\n      value: this.state.registerPw,\n      onChange: this.onRegisterPw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"register-btn\",\n      onClick: () => this.onRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }, \"Register\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"signin-un\",\n      value: this.state.userN,\n      onChange: this.onLoginUn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"signin-pw\",\n      value: this.state.userPw,\n      onChange: this.onLoginPw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signin-btn\",\n      type: \"submit\",\n      className: \"register-btn\",\n      onClick: () => this.onSignIn(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }\n    }, \"Sign In\"))) : null, this.state.registerError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"R-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 41\n      }\n    }, this.state.registerError) : null)));\n  }\n\n}\n\nexport default Home; //   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n//     localStorage.setItem('user', userJSON)\n// }\n// {text: \"Buy eggs\", notes:'empty',done: false,toggle:false},\n//   {text: \"Buy milk\", notes:'empty',done: true,toggle:false},","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js"],"names":["React","Component","Emoji","props","label","symbol","date","Date","toJSON","slice","time","dateTime","Home","state","list","grocery","input","textInput","newList","modal","modalContent","modalIndex","modalInput","modalTextInput","toggle","todoItemClicked","todo","active","todoListItems","user","userIs","registerUn","registerPw","userN","userPw","registered","testRegister","allUsers","loggedIn","registerError","onRegisterUn","event","setState","target","value","onRegisterPw","onLoginUn","onLoginPw","onInputChange","onTextInputChange","onModalInputChange","onModalTextInputChange","fetchUsers","testusers","fetch","then","response","json","data","console","log","push","onFetch","fetchUser","todoFetch","onRegister","userTaken","userEmpty","passwordEmpty","pw","formData","password","userLogin","map","index","Object","keys","includes","method","headers","body","JSON","stringify","onSignIn","un","userJSON","localStorage","setItem","onClicked","text","notes","done","deleteItem","id","changeToDone","showModal","modalList","onEdit","_id","onToggle","fetchLocal","getItem","parse","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Home.css';\n\n\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\nvar date = new Date().toJSON().slice(5,10);\nvar time = new Date().toJSON().slice(11,16)\nvar dateTime = date+' '+time;\n// function sleep(ms) {\n//   return new Promise(resolve => setTimeout(resolve, ms));\n// }\n\n\nclass Home extends Component{\n  \n\n\nstate = {\n  list: [\n  ],\n  grocery:[],\n  input: '',\n\n  textInput:'',\n  newList: [],\n  modal:false,\n  modalContent:[],\n  modalIndex:null,\n  modalInput:\"\",\n  modalTextInput:'',\n  toggle:false,\n  todoItemClicked:false,\n  todo:true,\n  active:'todo',\n  todoListItems: 'todo-list-items',\n  user:{},\n  userIs:false,\n  registerUn:'',\n  registerPw:'',\n  userN:'',\n  userPw:'',\n  registered:[],\n  testRegister:[],\n  allUsers:[],\n  loggedIn:false,\n  registerError: null\n  }\n\nonRegisterUn = (event) => {\n  this.setState({registerUn:event.target.value})\n}\nonRegisterPw = (event) => {\n  this.setState({registerPw:event.target.value})\n}\nonLoginUn = (event) => {\n  this.setState({userN:event.target.value})\n}\nonLoginPw = (event) => {\n  this.setState({userPw:event.target.value})\n}\n\nonInputChange = (event) => {\n\n  this.setState({input:event.target.value})\n}\nonTextInputChange = (event) => {\n  this.setState({textInput:event.target.value})\n}\nonModalInputChange = (event) => {\n\n  this.setState({modalInput:event.target.value})\n}\nonModalTextInputChange = (event) => {\n  this.setState({modalTextInput:event.target.value})\n}\nfetchUsers = () => {\n  let testusers= []\n  fetch('/api/mongodb/users/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({allUsers:data})\n    testusers.push(data)\n  })\n  this.setState({allUsers:testusers},()=> console.log(this.state.allUsers))\n  \n\n}\nonFetch = () => {\n    let fetchUser = this.state.user.user\n    let todoFetch = '/api/mongodb/'+ fetchUser + 'todolist/'  \n    console.log(todoFetch) \n    fetch(todoFetch)\n    .then(response => response.json())\n    .then(data => {\n      console.log('data!',data)\n      this.setState({list:data})\n    })\n    fetch(`/api/mongodb/${fetchUser}grocery/`)\n    .then(response => response.json())\n    .then(data => {\n      console.log('data!',data)\n      this.setState({grocery:data})\n      console.log(this.state.user)\n    })\n}\nonRegister = () => {\n  let userTaken = 'Username taken'\n  let userEmpty = 'Username is empty'\n  let passwordEmpty = 'Password is Empty'\n  let user = this.state.registerUn\n  let pw = this.state.registerPw\n\n  let formData = {user:user,password:pw}\n  console.log(formData)\n  let userLogin ={}\n  \n  userLogin = this.state.allUsers.map((user, index)=>{\n      return userLogin[user.user] = user.password  \n  })\n  \n  if(user === ''){\n    console.log('error1')\n    return this.setState({registerError:userEmpty})\n  }\n  if(Object.keys(userLogin).includes(user)){\n    console.log('error2')\n    return this.setState({registerError:userTaken})\n  }\n  if(pw === ''){\n    console.log('error3')\n    return this.setState({registerError:passwordEmpty})\n  }\n  if(user !== '' && !Object.keys(userLogin).includes(user) && pw !== '') {\n    fetch('/api/mongodb/users/', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(formData),\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Got this back', data);\n\n  });\n  this.setState({testRegister:formData})\n  this.setState({registerUn:''})\n  this.setState({registerPw:''})\n  }\n\n}\nonSignIn = () => {\n  console.log('signIN')\n  console.log(this.state.userN)\n  let un = this.state.userN\n  let pw = this.state.userPw\n  console.log(this.state.allUsers)\n  let userLogin ={}\n  const user = this.state.allUsers.map((user, index)=>{\n      return userLogin[user.user] = user.password\n    \n  })\n  console.log(userLogin)\n  \n if (Object.keys(userLogin).includes(un)){\n   if (userLogin[un] === pw){\n     console.log('log In')\n     user[un] = pw\n     this.setState({user:{user:un,password:pw}},() => {\n\n       const userJSON = JSON.stringify(this.state.user)\n       localStorage.setItem('user', userJSON)   \n       this.onFetch() \n\n     })\n     this.setState({loggedIn:true})\n     \n   }\n   else{\n     console.log('incorrect password')\n   }\n }\n else{\n   console.log('username does not exist')\n }\n console.log(this.state.user)\n\n}\nonClicked = () => {\n  if(this.state.input && this.state.todo && this.state.user){\n      \n      console.log(this.state.input)\n      // this.setState(prevState => ({\n      //   list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      // }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch(`/api/mongodb/${this.state.user.user}todolist/`, {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      \n      this.setState({input:''})\n      this.setState({textInput:''},()=> this.onFetch())\n      console.log(this.state.list)\n      \n\n      }\n    if(this.state.input && !this.state.todo){\n      console.log('grocery')\n      console.log(this.state.input)\n      // this.setState(prevState => ({\n      //   grocery: [...prevState.grocery, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      // }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch(`/api/mongodb/${this.state.user.user}grocery/`, {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      \n      console.log(this.state.grocery)\n      this.setState({input:''})\n      this.setState({textInput:''},()=> this.onFetch())\n      \n    }\n  \n}\n\ndeleteItem = (id) => {\n  console.log(id)\n  if(this.state.todo){\n    fetch(`/api/mongodb/${this.state.user.user}todolist/?_id=`+ id, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('deleted',id)\n      this.onFetch()\n    })\n  }\n  if(!this.state.todo){\n    fetch(`/api/mongodb/${this.state.user.user}grocery/?_id=` + id, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('deleted',id)\n      this.onFetch()\n    })\n  }\n  \n}\nchangeToDone = (index) => {\n  if(this.state.todo){\n    \n      console.log(this.state.list[index].done)\n      let list = this.state.list\n      let done = this.state.list[index]\n      \n      if(done.done === false){\n        done.done = true\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-true'\n      }\n      else{\n        done.done = false\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-false'\n      }\n      \n      this.setState({list})\n    }\n  if(!this.state.todo){\n      console.log(this.state.grocery[index].done)\n      let list = this.state.grocery\n      let done = this.state.grocery[index]\n      \n      if(done.done === false){\n        done.done = true\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-true'\n      }\n      else{\n        done.done = false\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-false'\n      }    \n      this.setState({grocery:list})\n  }\n}\nshowModal = index => {\n  if(this.state.todo){\n    console.log(index)\n    this.setState({modal:true})\n    let modalList = (this.state.list[index])\n    this.state.modalContent = modalList\n    this.setState({modalIndex:index})\n    this.setState({modalContent : modalList})\n    this.setState({modalInput : this.state.modalContent.text})\n    this.setState({modalTextInput:this.state.modalContent.notes})\n    console.log(this.state.modalInput)\n  }\n  if(!this.state.todo){\n    console.log(index)\n    this.setState({modal:true})\n    let modalList = (this.state.grocery[index])\n    this.state.modalContent = modalList\n    this.setState({modalIndex:index})\n    this.setState({modalContent : modalList})\n    this.setState({modalInput : this.state.modalContent.text})\n    this.setState({modalTextInput:this.state.modalContent.notes})\n    console.log(this.state.modalInput)\n  }\n}\nonEdit = (index) => {\n  if(this.state.modalInput && this.state.todo){\n      let list = this.state.list[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch(`/api/mongodb/${this.state.user.user}todolist/?_id=` + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n  if(this.state.modalInput && !this.state.todo){\n      let list = this.state.grocery[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch(`/api/mongodb/${this.state.user.user}grocery/?_id=` + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n}\n  onToggle = (index) => {\n    if(this.state.todo){\n      console.log(this.state.list[index])\n      let list = this.state.list\n      let toggle = list[index]\n      if(toggle.toggle === false){\n        toggle.toggle = true\n        toggle.todoItemClicked = 'todo-item-true'\n        \n      }\n      else{\n        toggle.toggle = false\n        toggle.todoItemClicked = 'todo-item-false'\n        \n      }\n      console.log(toggle.toggle)\n      this.setState({list})\n      console.log(this.state.list)\n    }\n    if(!this.state.todo){\n      let list = this.state.grocery\n      let toggle = list[index]\n      if(toggle.toggle === false){\n        toggle.toggle = true\n        toggle.todoItemClicked = 'todo-item-true'\n        \n      }\n      else{\n        toggle.toggle = false\n        toggle.todoItemClicked = 'todo-item-false'\n        \n      }\n      console.log(toggle.toggle)\n      this.setState({grocery:list})\n\n    }\n  }\n  fetchLocal = () => {\n    const userJSON = localStorage.getItem('user')\n    const user = JSON.parse(userJSON)\n    console.log(user)\n    if (user){\n      this.setState({user:user},()=> this.onFetch())\n      console.log(this.state.user)\n      this.setState({loggedIn:true})\n    }\n  }\ncomponentDidMount(){\n  this.fetchUsers()\n  this.fetchLocal()\n  console.log(this.state.allUsers)\n}\n\ntodo = (todo) => {\n  if (todo === 'todo'){\n    console.log('todo')\n    this.setState({todo:true})\n    this.setState({active:todo})\n    this.setState({todoListItems:'todo-list-items'})\n  }\n  if (todo === 'grocery'){\n    console.log('todo')\n    this.setState({todo:false})\n    this.setState({active:todo})\n    this.setState({todoListItems: 'todo-list-items grocery-true'})\n  }\n}\n\n\nrender() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div  className = \"todo-list\"\n        \n        >\n          <h1><span>To Do List</span></h1>   \n          <div className={this.state.todoListItems}>     \n          {(this.state.list !== 0 && this.state.todo)? (this.state.list.map((todo,index)=>\n              \n              <div key={index} className = \"todo-item\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.list[index].notes:('')}</div>\n              </div>\n              \n              \n              )):(\n                (this.state.grocery.map((todo,index)=>\n\n                <div key={index} className = \"todo-item grocery-2\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.grocery[index].notes:('')}</div>\n              </div>\n                \n                ))\n                )\n              }\n          </div> \n          <div className='input'>\n              <input type='text' placeholder='add todo item'className='input-item' value={this.state.input} onChange={this.onInputChange}></input><br></br><br></br>\n              <textarea className='input-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"20\" value={this.state.textInput} onChange={this.onTextInputChange}></textarea>\n              <br></br><br></br>\n              <input type='submit' className='input-button' onClick={()=> this.onClicked()} ></input>\n          </div>\n          <br></br>\n          <br></br>\n          {(this.state.modal)?(\n           <div className='modal' draggable='true'\n           >\n           \n              <input type='text' className='modal-text' value={this.state.modalInput} onChange={this.onModalInputChange}></input>\n\n              <br></br>\n              <br></br>\n\n              <textarea className='modal-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"30\" onChange={this.onModalTextInputChange} value={this.state.modalTextInput}>{this.state.modalTextInput}</textarea>\n              <br></br>\n              <button className='modal-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</button>\n              \n           \n           </div>\n          ):(<div></div>)\n          }\n          <div id={(this.state.active === 'todo')? \"active\":\"none\"} className=\"todo\" onClick={()=>this.todo('todo')}>Todo List</div>\n          <div id={(this.state.active === 'grocery')? \"active\":\"none\"} className=\"grocery\"  onClick={()=>this.todo('grocery')}> Grocery</div>\n          {(!this.state.loggedIn)?(\n          \n          <div className='log-in' id='user'>\n              <div className='register'>\n                <div>\n                <span>Username</span>\n                </div>\n                <div>\n                <input className='register-un' value={this.state.registerUn} onChange={this.onRegisterUn}></input>\n                </div>\n                <div>\n                <span>Password</span>\n                </div>\n                <div>\n                <input className='register-pw' value={this.state.registerPw} onChange={this.onRegisterPw}></input>\n                </div>\n                <div>\n                <button type='submit' className='register-btn' onClick={() => this.onRegister()} >Register</button>\n                </div>\n              </div>\n            \n              <div className='signin'>\n                <span>Username</span>\n                <br></br>\n                <input className='signin-un' value={this.state.userN} onChange={this.onLoginUn} ></input>\n                <br></br>\n                <span>Password</span>\n                <br></br>\n                <input className='signin-pw' value={this.state.userPw} onChange={this.onLoginPw}></input>\n                <br></br>\n                <button className='signin-btn' type='submit' className='register-btn' onClick={() => this.onSignIn()}>Sign In</button>\n              </div>\n              \n              </div>\n              ):(null)\n              }\n            {(this.state.registerError)?<div className='R-error'>{this.state.registerError}</div> : null }\n        </div>\n\n      </header>\n    </div>\n  );\n}\n}\nexport default Home;\n\n//   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n    \n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n    \n//     localStorage.setItem('user', userJSON)\n\n\n// }\n\n// {text: \"Buy eggs\", notes:'empty',done: false,toggle:false},\n//   {text: \"Buy milk\", notes:'empty',done: true,toggle:false},"]},"metadata":{},"sourceType":"module"}