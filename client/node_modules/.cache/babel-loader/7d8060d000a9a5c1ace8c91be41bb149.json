{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nconst Emoji = props => /*#__PURE__*/React.createElement(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": props.label ? props.label : \"\",\n  \"aria-hidden\": props.label ? \"false\" : \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, props.symbol);\n\nvar date = new Date().toJSON().slice(5, 10);\nvar time = new Date().toJSON().slice(11, 16);\nvar dateTime = date + ' ' + time;\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        text: \"Buy eggs\",\n        notes: 'empty',\n        done: false,\n        toggle: false\n      }, {\n        text: \"Buy milk\",\n        notes: 'empty',\n        done: true,\n        toggle: false\n      }],\n      grocery: [],\n      input: '',\n      textInput: '',\n      newList: [],\n      modal: false,\n      modalContent: [],\n      modalIndex: null,\n      modalInput: \"\",\n      modalTextInput: '',\n      toggle: false,\n      todoItemClicked: false,\n      todo: true,\n      active: 'todo',\n      todoListItems: 'todo-list-items',\n      user: [],\n      userIs: false,\n      registerUn: '',\n      registerPw: '',\n      userN: '',\n      userPw: '',\n      registered: [],\n      testRegister: [],\n      allUsers: []\n    };\n\n    this.onRegisterUn = event => {\n      this.setState({\n        registerUn: event.target.value\n      });\n    };\n\n    this.onRegisterPw = event => {\n      this.setState({\n        registerPw: event.target.value\n      });\n    };\n\n    this.onLoginUn = event => {\n      this.setState({\n        userN: event.target.value\n      });\n    };\n\n    this.onLoginPw = event => {\n      this.setState({\n        userPw: event.target.value\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      });\n    };\n\n    this.onModalInputChange = event => {\n      this.setState({\n        modalInput: event.target.value\n      });\n    };\n\n    this.onModalTextInputChange = event => {\n      this.setState({\n        modalTextInput: event.target.value\n      });\n    };\n\n    this.fetchUsers = () => {\n      let testusers = [];\n      fetch('/api/mongodb/users/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          allUsers: data\n        });\n        testusers.push(data);\n      });\n      this.setState({\n        allUsers: testusers\n      });\n      console.log(this.state.allUsers);\n    };\n\n    this.onFetch = () => {\n      fetch('/api/mongodb/todolist/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          list: data\n        });\n      });\n      fetch('/api/mongodb/grocery/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          grocery: data\n        });\n      });\n    };\n\n    this.onRegister = () => {\n      console.log('clicked');\n      let user = this.state.registerUn;\n      let pw = this.state.registerPw;\n      let formData = {\n        user: user,\n        password: pw\n      };\n      console.log(formData);\n      fetch('/api/mongodb/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(data => {\n        console.log('Got this back', data);\n      });\n      this.setState({\n        testRegister: formData\n      });\n      this.setState({\n        registerUn: ''\n      });\n      this.setState({\n        registerPw: ''\n      });\n    };\n\n    this.onSignIn = () => {\n      console.log('signIN');\n      console.log(this.state.userN);\n      let un = this.state.userN;\n      let pw = this.state.userPw;\n      console.log(this.state.allUsers);\n      let userLogin = {};\n      const user = this.state.allUsers.map((user, index) => {\n        return userLogin[user.user] = user.password;\n      });\n      console.log(userLogin);\n\n      if (Object.keys(userLogin).includes(un)) {\n        if (userLogin[un] === pw) {\n          console.log('log In');\n        } else {\n          console.log('incorrect password');\n        }\n      } else {\n        console.log('username does not exist');\n      }\n    };\n\n    this.onClicked = () => {\n      if (this.state.input && this.state.todo) {\n        console.log(this.state.input);\n        this.setState(prevState => ({\n          list: [...prevState.list, {\n            text: this.state.input,\n            notes: this.state.textInput,\n            done: false,\n            toggle: false,\n            time: dateTime\n          }]\n        }));\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch('/api/mongodb/todolist/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.list);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        });\n      }\n\n      if (this.state.input && !this.state.todo) {\n        console.log('grocery');\n        console.log(this.state.input);\n        this.setState(prevState => ({\n          grocery: [...prevState.grocery, {\n            text: this.state.input,\n            notes: this.state.textInput,\n            done: false,\n            toggle: false,\n            time: dateTime\n          }]\n        }));\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch('/api/mongodb/grocery/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.grocery);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        });\n      }\n    };\n\n    this.deleteItem = id => {\n      if (this.state.todo) {\n        fetch('/api/mongodb/todolist/?_id=' + id, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log('deleted', id);\n          this.onFetch();\n        });\n      }\n\n      if (!this.state.todo) {\n        fetch('/api/mongodb/grocery/?_id=' + id, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log('deleted', id);\n          this.onFetch();\n        });\n      }\n    };\n\n    this.changeToDone = index => {\n      if (this.state.todo) {\n        console.log(this.state.list[index].done);\n        let list = this.state.list;\n        let done = this.state.list[index];\n\n        if (done.done === false) {\n          done.done = true;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-true';\n        } else {\n          done.done = false;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-false';\n        }\n\n        this.setState({\n          list\n        });\n      }\n\n      if (!this.state.todo) {\n        console.log(this.state.grocery[index].done);\n        let list = this.state.grocery;\n        let done = this.state.grocery[index];\n\n        if (done.done === false) {\n          done.done = true;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-true';\n        } else {\n          done.done = false;\n          console.log(done.done);\n          done.todoItemClicked = 'todo-item-false';\n        }\n\n        this.setState({\n          grocery: list\n        });\n      }\n    };\n\n    this.showModal = index => {\n      if (this.state.todo) {\n        console.log(index);\n        this.setState({\n          modal: true\n        });\n        let modalList = this.state.list[index];\n        this.state.modalContent = modalList;\n        this.setState({\n          modalIndex: index\n        });\n        this.setState({\n          modalContent: modalList\n        });\n        this.setState({\n          modalInput: this.state.modalContent.text\n        });\n        this.setState({\n          modalTextInput: this.state.modalContent.notes\n        });\n        console.log(this.state.modalInput);\n      }\n\n      if (!this.state.todo) {\n        console.log(index);\n        this.setState({\n          modal: true\n        });\n        let modalList = this.state.grocery[index];\n        this.state.modalContent = modalList;\n        this.setState({\n          modalIndex: index\n        });\n        this.setState({\n          modalContent: modalList\n        });\n        this.setState({\n          modalInput: this.state.modalContent.text\n        });\n        this.setState({\n          modalTextInput: this.state.modalContent.notes\n        });\n        console.log(this.state.modalInput);\n      }\n    };\n\n    this.onEdit = index => {\n      if (this.state.modalInput && this.state.todo) {\n        let list = this.state.list[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch('/api/mongodb/todolist/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n\n      if (this.state.modalInput && !this.state.todo) {\n        let list = this.state.grocery[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch('/api/mongodb/grocery/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n    };\n\n    this.onToggle = index => {\n      if (this.state.todo) {\n        console.log(this.state.list[index]);\n        let list = this.state.list;\n        let toggle = list[index];\n\n        if (toggle.toggle === false) {\n          toggle.toggle = true;\n          toggle.todoItemClicked = 'todo-item-true';\n        } else {\n          toggle.toggle = false;\n          toggle.todoItemClicked = 'todo-item-false';\n        }\n\n        console.log(toggle.toggle);\n        this.setState({\n          list\n        });\n        console.log(this.state.list);\n      }\n\n      if (!this.state.todo) {\n        let list = this.state.grocery;\n        let toggle = list[index];\n\n        if (toggle.toggle === false) {\n          toggle.toggle = true;\n          toggle.todoItemClicked = 'todo-item-true';\n        } else {\n          toggle.toggle = false;\n          toggle.todoItemClicked = 'todo-item-false';\n        }\n\n        console.log(toggle.toggle);\n        this.setState({\n          grocery: list\n        });\n      }\n    };\n\n    this.todo = todo => {\n      if (todo === 'todo') {\n        console.log('todo');\n        this.setState({\n          todo: true\n        });\n        this.setState({\n          active: todo\n        });\n        this.setState({\n          todoListItems: 'todo-list-items'\n        });\n      }\n\n      if (todo === 'grocery') {\n        console.log('todo');\n        this.setState({\n          todo: false\n        });\n        this.setState({\n          active: todo\n        });\n        this.setState({\n          todoListItems: 'todo-list-items grocery-true'\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n    console.log(this.state.allUsers);\n    this.onFetch();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 15\n      }\n    }, \"To Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.todoListItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }, this.state.list !== 0 && this.state.todo ? this.state.list.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.list[index].notes : ''))) : this.state.grocery.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item grocery-2\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.grocery[index].notes : '')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add todo item\",\n      className: \"input-item\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 147\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 156\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"input-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"20\",\n      value: this.state.textInput,\n      onChange: this.onTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"input-button\",\n      onClick: () => this.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      draggable: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"modal-text\",\n      value: this.state.modalInput,\n      onChange: this.onModalInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"modal-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"30\",\n      onChange: this.onModalTextInputChange,\n      value: this.state.modalTextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 15\n      }\n    }, this.state.modalTextInput), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"modal-button\",\n      onClick: () => this.onEdit(this.state.modalIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 15\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.active === 'todo' ? \"active\" : \"none\",\n      className: \"todo\",\n      onClick: () => this.todo('todo'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.active === 'grocery' ? \"active\" : \"none\",\n      className: \"grocery\",\n      onClick: () => this.todo('grocery'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, \" Grocery\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.userIs ? 'user-true' : 'user-false',\n      id: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }\n    }, \" user\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"register-un\",\n      value: this.state.registerUn,\n      onChange: this.onRegisterUn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"register-pw\",\n      value: this.state.registerPw,\n      onChange: this.onRegisterPw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"register-btn\",\n      onClick: () => this.onRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"signin-un\",\n      value: this.state.userN,\n      onChange: this.onLoginUn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"signin-pw\",\n      value: this.state.userPw,\n      onChange: this.onLoginPw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signin-btn\",\n      type: \"submit\",\n      className: \"register-btn\",\n      onClick: () => this.onSignIn(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, \"Sign In\"))))));\n  }\n\n}\n\nexport default Home; //   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n//     localStorage.setItem('user', userJSON)\n// }","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js"],"names":["React","Component","Emoji","props","label","symbol","date","Date","toJSON","slice","time","dateTime","sleep","ms","Promise","resolve","setTimeout","Home","state","list","text","notes","done","toggle","grocery","input","textInput","newList","modal","modalContent","modalIndex","modalInput","modalTextInput","todoItemClicked","todo","active","todoListItems","user","userIs","registerUn","registerPw","userN","userPw","registered","testRegister","allUsers","onRegisterUn","event","setState","target","value","onRegisterPw","onLoginUn","onLoginPw","onInputChange","onTextInputChange","onModalInputChange","onModalTextInputChange","fetchUsers","testusers","fetch","then","response","json","data","console","log","push","onFetch","onRegister","pw","formData","password","method","headers","body","JSON","stringify","onSignIn","un","userLogin","map","index","Object","keys","includes","onClicked","prevState","deleteItem","id","changeToDone","showModal","modalList","onEdit","_id","onToggle","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Home.css';\n\n\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\nvar date = new Date().toJSON().slice(5,10);\nvar time = new Date().toJSON().slice(11,16)\nvar dateTime = date+' '+time;\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nclass Home extends Component{\n  \n\n\nstate = {\n  list: [{text: \"Buy eggs\", notes:'empty',done: false,toggle:false},\n  {text: \"Buy milk\", notes:'empty',done: true,toggle:false},\n  ],\n  grocery:[],\n  input: '',\n\n  textInput:'',\n  newList: [],\n  modal:false,\n  modalContent:[],\n  modalIndex:null,\n  modalInput:\"\",\n  modalTextInput:'',\n  toggle:false,\n  todoItemClicked:false,\n  todo:true,\n  active:'todo',\n  todoListItems: 'todo-list-items',\n  user :[],\n  userIs:false,\n  registerUn:'',\n  registerPw:'',\n  userN:'',\n  userPw:'',\n  registered:[],\n  testRegister:[],\n  allUsers:[]\n  }\n\n\n\n// userFetch = () => {\n//   const userJSON = localStorage.getItem('user')\n//   const user = JSON.parse(userJSON)\n//   if (user){\n//     this.setState({user:user })\n//   }\n// }\n\nonRegisterUn = (event) => {\n  this.setState({registerUn:event.target.value})\n}\nonRegisterPw = (event) => {\n  this.setState({registerPw:event.target.value})\n}\nonLoginUn = (event) => {\n  this.setState({userN:event.target.value})\n}\nonLoginPw = (event) => {\n  this.setState({userPw:event.target.value})\n}\n\nonInputChange = (event) => {\n\n  this.setState({input:event.target.value})\n}\nonTextInputChange = (event) => {\n  this.setState({textInput:event.target.value})\n}\nonModalInputChange = (event) => {\n\n  this.setState({modalInput:event.target.value})\n}\nonModalTextInputChange = (event) => {\n  this.setState({modalTextInput:event.target.value})\n}\nfetchUsers = () => {\n  let testusers= []\n  fetch('/api/mongodb/users/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({allUsers:data})\n    testusers.push(data)\n  })\n  this.setState({allUsers:testusers})\n  console.log(this.state.allUsers)\n\n}\nonFetch = () => {\n  fetch('/api/mongodb/todolist/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({list:data})\n  })\n  fetch('/api/mongodb/grocery/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({grocery:data})\n  })\n}\nonRegister = () => {\n  console.log('clicked')\n\n  let user = this.state.registerUn\n  let pw = this.state.registerPw\n  let formData = {user:user,password:pw}\n  console.log(formData)\n  \n  fetch('/api/mongodb/users/', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(formData),\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Got this back', data);\n\n  });\n  this.setState({testRegister:formData})\n  this.setState({registerUn:''})\n  this.setState({registerPw:''})\n\n}\nonSignIn = () => {\n  console.log('signIN')\n  console.log(this.state.userN)\n  let un = this.state.userN\n  let pw = this.state.userPw\n  console.log(this.state.allUsers)\n  let userLogin ={}\n  const user = this.state.allUsers.map((user, index)=>{\n      return userLogin[user.user] = user.password\n    \n  })\n  console.log(userLogin)\n if (Object.keys(userLogin).includes(un)){\n   if (userLogin[un] === pw){\n     console.log('log In')\n   }\n   else{\n     console.log('incorrect password')\n   }\n\n }\n else{\n   console.log('username does not exist')\n }\n\n}\nonClicked = () => {\n  if(this.state.input && this.state.todo){\n      \n      console.log(this.state.input)\n      this.setState(prevState => ({\n        list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch('/api/mongodb/todolist/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      console.log(this.state.list)\n      this.setState({input:''})\n      this.setState({textInput:''})\n\n      }\n    if(this.state.input && !this.state.todo){\n      console.log('grocery')\n      console.log(this.state.input)\n      this.setState(prevState => ({\n        grocery: [...prevState.grocery, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch('/api/mongodb/grocery/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      console.log(this.state.grocery)\n      this.setState({input:''})\n      this.setState({textInput:''})\n    }\n  \n}\n\ndeleteItem = (id) => {\n  if(this.state.todo){\n    fetch('/api/mongodb/todolist/?_id=' + id, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('deleted',id)\n      this.onFetch()\n    })\n  }\n  if(!this.state.todo){\n    fetch('/api/mongodb/grocery/?_id=' + id, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('deleted',id)\n      this.onFetch()\n    })\n  }\n  \n}\nchangeToDone = (index) => {\n  if(this.state.todo){\n    \n      console.log(this.state.list[index].done)\n      let list = this.state.list\n      let done = this.state.list[index]\n      \n      if(done.done === false){\n        done.done = true\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-true'\n      }\n      else{\n        done.done = false\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-false'\n      }\n      \n      this.setState({list})\n    }\n  if(!this.state.todo){\n      console.log(this.state.grocery[index].done)\n      let list = this.state.grocery\n      let done = this.state.grocery[index]\n      \n      if(done.done === false){\n        done.done = true\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-true'\n      }\n      else{\n        done.done = false\n        console.log(done.done)\n        done.todoItemClicked = 'todo-item-false'\n      }\n      \n      this.setState({grocery:list})\n\n  }\n}\nshowModal = index => {\n  if(this.state.todo){\n    console.log(index)\n    this.setState({modal:true})\n    let modalList = (this.state.list[index])\n    this.state.modalContent = modalList\n    this.setState({modalIndex:index})\n    this.setState({modalContent : modalList})\n    this.setState({modalInput : this.state.modalContent.text})\n    this.setState({modalTextInput:this.state.modalContent.notes})\n    console.log(this.state.modalInput)\n  }\n  if(!this.state.todo){\n    console.log(index)\n    this.setState({modal:true})\n    let modalList = (this.state.grocery[index])\n    this.state.modalContent = modalList\n    this.setState({modalIndex:index})\n    this.setState({modalContent : modalList})\n    this.setState({modalInput : this.state.modalContent.text})\n    this.setState({modalTextInput:this.state.modalContent.notes})\n    console.log(this.state.modalInput)\n  }\n}\nonEdit = (index) => {\n  if(this.state.modalInput && this.state.todo){\n      let list = this.state.list[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch('/api/mongodb/todolist/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n  if(this.state.modalInput && !this.state.todo){\n      let list = this.state.grocery[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch('/api/mongodb/grocery/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n}\n  onToggle = (index) => {\n    if(this.state.todo){\n      console.log(this.state.list[index])\n      let list = this.state.list\n      let toggle = list[index]\n      if(toggle.toggle === false){\n        toggle.toggle = true\n        toggle.todoItemClicked = 'todo-item-true'\n        \n      }\n      else{\n        toggle.toggle = false\n        toggle.todoItemClicked = 'todo-item-false'\n        \n      }\n      console.log(toggle.toggle)\n      this.setState({list})\n      console.log(this.state.list)\n    }\n    if(!this.state.todo){\n      let list = this.state.grocery\n      let toggle = list[index]\n      if(toggle.toggle === false){\n        toggle.toggle = true\n        toggle.todoItemClicked = 'todo-item-true'\n        \n      }\n      else{\n        toggle.toggle = false\n        toggle.todoItemClicked = 'todo-item-false'\n        \n      }\n      console.log(toggle.toggle)\n      this.setState({grocery:list})\n\n    }\n  }\ncomponentDidMount(){\n  \n  this.fetchUsers()\n  console.log(this.state.allUsers)\n  this.onFetch()\n\n}\n\ntodo = (todo) => {\n  if (todo === 'todo'){\n    console.log('todo')\n    this.setState({todo:true})\n    this.setState({active:todo})\n    this.setState({todoListItems:'todo-list-items'})\n  }\n  if (todo === 'grocery'){\n    console.log('todo')\n    this.setState({todo:false})\n    this.setState({active:todo})\n    this.setState({todoListItems: 'todo-list-items grocery-true'})\n  }\n}\n\n\nrender() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div  className = \"todo-list\"\n        \n        >\n          <h1><span>To Do List</span></h1>   \n          <div className={this.state.todoListItems}>     \n          {(this.state.list !== 0 && this.state.todo)? (this.state.list.map((todo,index)=>\n              \n              <div key={index} className = \"todo-item\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.list[index].notes:('')}</div>\n              </div>\n              \n              \n              )):(\n                (this.state.grocery.map((todo,index)=>\n\n                <div key={index} className = \"todo-item grocery-2\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.grocery[index].notes:('')}</div>\n              </div>\n                \n                ))\n                )\n              }\n          </div> \n          <div className='input'>\n              <input type='text' placeholder='add todo item'className='input-item' value={this.state.input} onChange={this.onInputChange}></input><br></br><br></br>\n              <textarea className='input-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"20\" value={this.state.textInput} onChange={this.onTextInputChange}></textarea>\n              <br></br><br></br>\n              <input type='submit' className='input-button' onClick={()=> this.onClicked()} ></input>\n          </div>\n          <br></br>\n          <br></br>\n          {(this.state.modal)?(\n           <div className='modal' draggable='true'\n           >\n           \n              <input type='text' className='modal-text' value={this.state.modalInput} onChange={this.onModalInputChange}></input>\n\n              <br></br>\n              <br></br>\n\n              <textarea className='modal-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"30\" onChange={this.onModalTextInputChange} value={this.state.modalTextInput}>{this.state.modalTextInput}</textarea>\n              <br></br>\n              <button className='modal-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</button>\n              \n           \n           </div>\n          ):(<div></div>)\n          }\n          <div id={(this.state.active === 'todo')? \"active\":\"none\"} className=\"todo\" onClick={()=>this.todo('todo')}>Todo List</div>\n          <div id={(this.state.active === 'grocery')? \"active\":\"none\"} className=\"grocery\"  onClick={()=>this.todo('grocery')}> Grocery</div>\n          <div className={(this.state.userIs)?('user-true'):('user-false')} id='user'> user\n              <div className='register'>\n                <span>Username</span>\n                <br></br>\n                <input className='register-un' value={this.state.registerUn} onChange={this.onRegisterUn}></input>\n                <br></br>\n                <span>Password</span>\n                <br></br>\n                <input className='register-pw' value={this.state.registerPw} onChange={this.onRegisterPw}></input>\n                <br></br>\n                <button type='submit' className='register-btn' onClick={() => this.onRegister()} >Register</button>\n              </div>\n              <div className='signin'>\n                <span>Username</span>\n                <br></br>\n                <input className='signin-un' value={this.state.userN} onChange={this.onLoginUn} ></input>\n                <br></br>\n                <span>Password</span>\n                <br></br>\n                <input className='signin-pw' value={this.state.userPw} onChange={this.onLoginPw}></input>\n                <br></br>\n                <button className='signin-btn' type='submit' className='register-btn' onClick={() => this.onSignIn()}>Sign In</button>\n              </div>\n          \n          </div>\n        </div>\n\n      </header>\n    </div>\n  );\n}\n}\nexport default Home;\n\n//   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n    \n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n    \n//     localStorage.setItem('user', userJSON)\n\n\n// }"]},"metadata":{},"sourceType":"module"}