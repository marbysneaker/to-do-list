{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nconst Emoji = props => /*#__PURE__*/React.createElement(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": props.label ? props.label : \"\",\n  \"aria-hidden\": props.label ? \"false\" : \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, props.symbol);\n\nvar date = new Date().toJSON().slice(5, 10);\nvar time = new Date().toJSON().slice(11, 16);\nvar dateTime = date + ' ' + time;\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        text: \"Buy eggs\",\n        notes: 'empty',\n        done: false,\n        toggle: false\n      }, {\n        text: \"Buy milk\",\n        notes: 'empty',\n        done: true,\n        toggle: false\n      }],\n      grocery: [],\n      input: '',\n      textInput: '',\n      newList: [],\n      modal: false,\n      modalContent: [],\n      modalIndex: null,\n      modalInput: \"\",\n      modalTextInput: '',\n      toggle: false,\n      todoItemClicked: false,\n      todo: true,\n      active: 'todo',\n      todoListItems: 'todo-list-items'\n    };\n\n    this.onDragStart = event => {\n      event.dataTransfer.setData('text', event.target.id);\n    };\n\n    this.onDrop = event => {\n      event.dataTransfer.setData(\"text\", event.target.id);\n      event.preventDefault();\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      });\n    };\n\n    this.onModalInputChange = event => {\n      this.setState({\n        modalInput: event.target.value\n      });\n    };\n\n    this.onModalTextInputChange = event => {\n      this.setState({\n        modalTextInput: event.target.value\n      });\n    };\n\n    this.onFetch = () => {\n      fetch('/api/mongodb/todolist/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          list: data\n        });\n      });\n      fetch('/api/mongodb/grocery/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          grocery: data\n        });\n      });\n    };\n\n    this.onClicked = () => {\n      if (this.state.input && this.state.todo) {\n        console.log(this.state.input);\n        this.setState(prevState => ({\n          list: [...prevState.list, {\n            text: this.state.input,\n            notes: this.state.textInput,\n            done: false,\n            toggle: false,\n            time: dateTime\n          }]\n        }));\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch('/api/mongodb/todolist/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.list);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        });\n      }\n\n      if (this.state.input && !this.state.todo) {\n        console.log('grocery');\n        console.log(this.state.input);\n        this.setState(prevState => ({\n          grocery: [...prevState.grocery, {\n            text: this.state.input,\n            notes: this.state.textInput,\n            done: false,\n            toggle: false,\n            time: dateTime\n          }]\n        }));\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch('/api/mongodb/grocery/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.grocery);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        });\n      }\n    };\n\n    this.deleteItem = id => {\n      if (this.state.todo) {\n        fetch('/api/mongodb/todolist/?_id=' + id, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log('deleted', id);\n          this.onFetch();\n        });\n      }\n\n      if (!this.state.todo) {\n        fetch('/api/mongodb/grocery/?_id=' + id, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log('deleted', id);\n          this.onFetch();\n        });\n      }\n    };\n\n    this.changeToDone = index => {\n      console.log(this.state.list[index].done);\n      let list = this.state.list;\n      let done = this.state.list[index];\n\n      if (done.done === false) {\n        done.done = true;\n        console.log(done.done);\n        done.todoItemClicked = 'todo-item-true';\n      } else {\n        done.done = false;\n        console.log(done.done);\n        done.todoItemClicked = 'todo-item-false';\n      }\n\n      this.setState({\n        list\n      });\n    };\n\n    this.showModal = index => {\n      if (this.state.todo) {\n        console.log(index);\n        this.setState({\n          modal: true\n        });\n        let modalList = this.state.list[index];\n        this.state.modalContent = modalList;\n        this.setState({\n          modalIndex: index\n        });\n        this.setState({\n          modalContent: modalList\n        });\n        this.setState({\n          modalInput: this.state.modalContent.text\n        });\n        this.setState({\n          modalTextInput: this.state.modalContent.notes\n        });\n        console.log(this.state.modalInput);\n      }\n\n      if (!this.state.todo) {\n        console.log(index);\n        this.setState({\n          modal: true\n        });\n        let modalList = this.state.grocery[index];\n        this.state.modalContent = modalList;\n        this.setState({\n          modalIndex: index\n        });\n        this.setState({\n          modalContent: modalList\n        });\n        this.setState({\n          modalInput: this.state.modalContent.text\n        });\n        this.setState({\n          modalTextInput: this.state.modalContent.notes\n        });\n        console.log(this.state.modalInput);\n      }\n    };\n\n    this.onEdit = index => {\n      if (this.state.modalInput && this.state.todo) {\n        let list = this.state.list[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch('/api/mongodb/todolist/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n\n      if (this.state.modalInput && !this.state.todo) {\n        let list = this.state.grocery[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch('/api/mongodb/grocery/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n    };\n\n    this.onToggle = index => {\n      if (this.state.todo) {\n        console.log(this.state.list[index]);\n        let list = this.state.list;\n        let toggle = list[index];\n\n        if (toggle.toggle === false) {\n          toggle.toggle = true;\n          toggle.todoItemClicked = 'todo-item-true';\n        } else {\n          toggle.toggle = false;\n          toggle.todoItemClicked = 'todo-item-false';\n        }\n\n        console.log(toggle.toggle);\n        this.setState({\n          list\n        });\n        console.log(this.state.list);\n      }\n\n      if (!this.state.todo) {\n        let list = this.state.grocery;\n        let toggle = list[index];\n\n        if (toggle.toggle === false) {\n          toggle.toggle = true;\n          toggle.todoItemClicked = 'todo-item-true';\n        } else {\n          toggle.toggle = false;\n          toggle.todoItemClicked = 'todo-item-false';\n        }\n\n        console.log(toggle.toggle);\n        this.setState({\n          grocery: list\n        });\n      }\n    };\n\n    this.todo = todo => {\n      if (todo === 'todo') {\n        this.setState({\n          todo: true\n        });\n        this.setState({\n          active: todo\n        });\n      }\n\n      if (todo === 'grocery') {\n        this.setState({\n          todo: false\n        });\n        this.setState({\n          active: todo\n        });\n        this.setState({\n          todoListItems: 'todo-list-items grocery-true'\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.onFetch();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      onDrop: e => this.onDrop(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, \"To Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, this.state.list !== 0 && this.state.todo ? this.state.list.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.list[index].notes : ''))) : this.state.grocery.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item grocery-true\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.grocery[index].notes : '')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add todo item\",\n      className: \"input-item\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 147\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 156\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"input-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"20\",\n      value: this.state.textInput,\n      onChange: this.onTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"input-button\",\n      onClick: () => this.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      draggable: \"true\",\n      onDragStart: event => this.onDragStart(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"modal-text\",\n      value: this.state.modalInput,\n      onChange: this.onModalInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"modal-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"30\",\n      onChange: this.onModalTextInputChange,\n      value: this.state.modalTextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, this.state.modalTextInput), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"modal-button\",\n      onClick: () => this.onEdit(this.state.modalIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.active === 'todo' ? \"active\" : \"none\",\n      className: \"todo\",\n      onClick: () => this.todo('todo'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.active === 'grocery' ? \"active\" : \"none\",\n      className: \"grocery\",\n      onClick: () => this.todo('grocery'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }\n    }, \" Grocery\"))));\n  }\n\n}\n\nexport default Home; //   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n//     localStorage.setItem('user', userJSON)\n// }","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js"],"names":["React","Component","Emoji","props","label","symbol","date","Date","toJSON","slice","time","dateTime","sleep","ms","Promise","resolve","setTimeout","Home","state","list","text","notes","done","toggle","grocery","input","textInput","newList","modal","modalContent","modalIndex","modalInput","modalTextInput","todoItemClicked","todo","active","todoListItems","onDragStart","event","dataTransfer","setData","target","id","onDrop","preventDefault","onInputChange","setState","value","onTextInputChange","onModalInputChange","onModalTextInputChange","onFetch","fetch","then","response","json","data","console","log","onClicked","prevState","formData","method","headers","body","JSON","stringify","deleteItem","changeToDone","index","showModal","modalList","onEdit","_id","onToggle","componentDidMount","render","e","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAGA,MAAMC,KAAK,GAAGC,KAAK,iBACjB;AACE,EAAA,SAAS,EAAC,OADZ;AAEE,EAAA,IAAI,EAAC,KAFP;AAGE,gBAAYA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4B,EAH1C;AAIE,iBAAaD,KAAK,CAACC,KAAN,GAAc,OAAd,GAAwB,MAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGD,KAAK,CAACE,MANT,CADF;;AAUA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,MAAX,GAAoBC,KAApB,CAA0B,CAA1B,EAA4B,EAA5B,CAAX;AACA,IAAIC,IAAI,GAAG,IAAIH,IAAJ,GAAWC,MAAX,GAAoBC,KAApB,CAA0B,EAA1B,EAA6B,EAA7B,CAAX;AACA,IAAIE,QAAQ,GAAGL,IAAI,GAAC,GAAL,GAASI,IAAxB;;AACA,SAASE,KAAT,CAAeC,EAAf,EAAmB;AACjB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACD;;AAGD,MAAMI,IAAN,SAAmBhB,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAI5BiB,KAJ4B,GAIpB;AACNC,MAAAA,IAAI,EAAE,CAAC;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,KAAK,EAAC,OAAzB;AAAiCC,QAAAA,IAAI,EAAE,KAAvC;AAA6CC,QAAAA,MAAM,EAAC;AAApD,OAAD,EACN;AAACH,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,KAAK,EAAC,OAAzB;AAAiCC,QAAAA,IAAI,EAAE,IAAvC;AAA4CC,QAAAA,MAAM,EAAC;AAAnD,OADM,CADA;AAINC,MAAAA,OAAO,EAAC,EAJF;AAKNC,MAAAA,KAAK,EAAE,EALD;AAONC,MAAAA,SAAS,EAAC,EAPJ;AAQNC,MAAAA,OAAO,EAAE,EARH;AASNC,MAAAA,KAAK,EAAC,KATA;AAUNC,MAAAA,YAAY,EAAC,EAVP;AAWNC,MAAAA,UAAU,EAAC,IAXL;AAYNC,MAAAA,UAAU,EAAC,EAZL;AAaNC,MAAAA,cAAc,EAAC,EAbT;AAcNT,MAAAA,MAAM,EAAC,KAdD;AAeNU,MAAAA,eAAe,EAAC,KAfV;AAgBNC,MAAAA,IAAI,EAAC,IAhBC;AAiBNC,MAAAA,MAAM,EAAC,MAjBD;AAkBNC,MAAAA,aAAa,EAAE;AAlBT,KAJoB;;AAAA,SAyB5BC,WAzB4B,GAyBbC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2B,MAA3B,EAAkCF,KAAK,CAACG,MAAN,CAAaC,EAA/C;AAEH,KA5B2B;;AAAA,SA8B5BC,MA9B4B,GA8BlBL,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2B,MAA3B,EAAmCF,KAAK,CAACG,MAAN,CAAaC,EAAhD;AACAJ,MAAAA,KAAK,CAACM,cAAN;AAGD,KAnC2B;;AAAA,SAqC5BC,aArC4B,GAqCXP,KAAD,IAAW;AAEzB,WAAKQ,QAAL,CAAc;AAACrB,QAAAA,KAAK,EAACa,KAAK,CAACG,MAAN,CAAaM;AAApB,OAAd;AACD,KAxC2B;;AAAA,SAyC5BC,iBAzC4B,GAyCPV,KAAD,IAAW;AAC7B,WAAKQ,QAAL,CAAc;AAACpB,QAAAA,SAAS,EAACY,KAAK,CAACG,MAAN,CAAaM;AAAxB,OAAd;AACD,KA3C2B;;AAAA,SA4C5BE,kBA5C4B,GA4CNX,KAAD,IAAW;AAE9B,WAAKQ,QAAL,CAAc;AAACf,QAAAA,UAAU,EAACO,KAAK,CAACG,MAAN,CAAaM;AAAzB,OAAd;AACD,KA/C2B;;AAAA,SAgD5BG,sBAhD4B,GAgDFZ,KAAD,IAAW;AAClC,WAAKQ,QAAL,CAAc;AAACd,QAAAA,cAAc,EAACM,KAAK,CAACG,MAAN,CAAaM;AAA7B,OAAd;AACD,KAlD2B;;AAAA,SAmD5BI,OAnD4B,GAmDlB,MAAM;AACdC,MAAAA,KAAK,CAAC,wBAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,IAApB;AACA,aAAKV,QAAL,CAAc;AAAC3B,UAAAA,IAAI,EAACqC;AAAN,SAAd;AACD,OALD;AAMAJ,MAAAA,KAAK,CAAC,uBAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,IAApB;AACA,aAAKV,QAAL,CAAc;AAACtB,UAAAA,OAAO,EAACgC;AAAT,SAAd;AACD,OALD;AAMD,KAhE2B;;AAAA,SAiE5BG,SAjE4B,GAiEhB,MAAM;AAChB,UAAG,KAAKzC,KAAL,CAAWO,KAAX,IAAoB,KAAKP,KAAL,CAAWgB,IAAlC,EAAuC;AAEnCuB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWO,KAAvB;AACA,aAAKqB,QAAL,CAAcc,SAAS,KAAK;AAC1BzC,UAAAA,IAAI,EAAE,CAAC,GAAGyC,SAAS,CAACzC,IAAd,EAAoB;AAACC,YAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWO,KAAlB;AAAwBJ,YAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWQ,SAAzC;AAAmDJ,YAAAA,IAAI,EAAC,KAAxD;AAA8DC,YAAAA,MAAM,EAAC,KAArE;AAA2Eb,YAAAA,IAAI,EAACC;AAAhF,WAApB;AADoB,SAAL,CAAvB;AAGA,cAAMkD,QAAQ,GAAG;AACfzC,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWO,KADF;AACQJ,UAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWQ,SADzB;AACmCJ,UAAAA,IAAI,EAAC,KADxC;AAC8CC,UAAAA,MAAM,EAAC,KADrD;AAC2Db,UAAAA,IAAI,EAACC;AADhE,SAAjB;AAKAyC,QAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC5BU,UAAAA,MAAM,EAAE,MADoB;AAE5BC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFmB;AAG5BC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAHsB,SAA3B,CAAL,CAKGR,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AAGD,SAVH,EAXmC,CAsBnC;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWC,IAAvB;AACA,aAAK2B,QAAL,CAAc;AAACrB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACA,aAAKqB,QAAL,CAAc;AAACpB,UAAAA,SAAS,EAAC;AAAX,SAAd;AAEC;;AACH,UAAG,KAAKR,KAAL,CAAWO,KAAX,IAAoB,CAAC,KAAKP,KAAL,CAAWgB,IAAnC,EAAwC;AACtCuB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWO,KAAvB;AACA,aAAKqB,QAAL,CAAcc,SAAS,KAAK;AAC1BpC,UAAAA,OAAO,EAAE,CAAC,GAAGoC,SAAS,CAACpC,OAAd,EAAuB;AAACJ,YAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWO,KAAlB;AAAwBJ,YAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWQ,SAAzC;AAAmDJ,YAAAA,IAAI,EAAC,KAAxD;AAA8DC,YAAAA,MAAM,EAAC,KAArE;AAA2Eb,YAAAA,IAAI,EAACC;AAAhF,WAAvB;AADiB,SAAL,CAAvB;AAGA,cAAMkD,QAAQ,GAAG;AACfzC,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWO,KADF;AACQJ,UAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWQ,SADzB;AACmCJ,UAAAA,IAAI,EAAC,KADxC;AAC8CC,UAAAA,MAAM,EAAC,KADrD;AAC2Db,UAAAA,IAAI,EAACC;AADhE,SAAjB;AAKAyC,QAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC3BU,UAAAA,MAAM,EAAE,MADmB;AAE3BC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFkB;AAG3BC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAHqB,SAA1B,CAAL,CAKGR,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AAGD,SAVH,EAXsC,CAsBtC;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWM,OAAvB;AACA,aAAKsB,QAAL,CAAc;AAACrB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACA,aAAKqB,QAAL,CAAc;AAACpB,UAAAA,SAAS,EAAC;AAAX,SAAd;AACD;AAEJ,KA1H2B;;AAAA,SA4H5ByC,UA5H4B,GA4HdzB,EAAD,IAAQ;AACnB,UAAG,KAAKxB,KAAL,CAAWgB,IAAd,EAAmB;AACjBkB,QAAAA,KAAK,CAAC,gCAAgCV,EAAjC,EAAqC;AACxCoB,UAAAA,MAAM,EAAE;AADgC,SAArC,CAAL,CAGCT,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,IAAI,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBhB,EAAtB;AACA,eAAKS,OAAL;AACD,SAPD;AAQD;;AACD,UAAG,CAAC,KAAKjC,KAAL,CAAWgB,IAAf,EAAoB;AAClBkB,QAAAA,KAAK,CAAC,+BAA+BV,EAAhC,EAAoC;AACvCoB,UAAAA,MAAM,EAAE;AAD+B,SAApC,CAAL,CAGCT,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,IAAI,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBhB,EAAtB;AACA,eAAKS,OAAL;AACD,SAPD;AAQD;AAEF,KAlJ2B;;AAAA,SAmJ5BiB,YAnJ4B,GAmJZC,KAAD,IAAW;AACxBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWC,IAAX,CAAgBkD,KAAhB,EAAuB/C,IAAnC;AACA,UAAIH,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,UAAIG,IAAI,GAAG,KAAKJ,KAAL,CAAWC,IAAX,CAAgBkD,KAAhB,CAAX;;AAEA,UAAG/C,IAAI,CAACA,IAAL,KAAc,KAAjB,EAAuB;AACrBA,QAAAA,IAAI,CAACA,IAAL,GAAY,IAAZ;AACAmC,QAAAA,OAAO,CAACC,GAAR,CAAYpC,IAAI,CAACA,IAAjB;AACAA,QAAAA,IAAI,CAACW,eAAL,GAAuB,gBAAvB;AACD,OAJD,MAKI;AACFX,QAAAA,IAAI,CAACA,IAAL,GAAY,KAAZ;AACAmC,QAAAA,OAAO,CAACC,GAAR,CAAYpC,IAAI,CAACA,IAAjB;AACAA,QAAAA,IAAI,CAACW,eAAL,GAAuB,iBAAvB;AACD;;AAED,WAAKa,QAAL,CAAc;AAAC3B,QAAAA;AAAD,OAAd;AACD,KApK2B;;AAAA,SAqK5BmD,SArK4B,GAqKhBD,KAAK,IAAI;AACnB,UAAG,KAAKnD,KAAL,CAAWgB,IAAd,EAAmB;AACjBuB,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,aAAKvB,QAAL,CAAc;AAAClB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACA,YAAI2C,SAAS,GAAI,KAAKrD,KAAL,CAAWC,IAAX,CAAgBkD,KAAhB,CAAjB;AACA,aAAKnD,KAAL,CAAWW,YAAX,GAA0B0C,SAA1B;AACA,aAAKzB,QAAL,CAAc;AAAChB,UAAAA,UAAU,EAACuC;AAAZ,SAAd;AACA,aAAKvB,QAAL,CAAc;AAACjB,UAAAA,YAAY,EAAG0C;AAAhB,SAAd;AACA,aAAKzB,QAAL,CAAc;AAACf,UAAAA,UAAU,EAAG,KAAKb,KAAL,CAAWW,YAAX,CAAwBT;AAAtC,SAAd;AACA,aAAK0B,QAAL,CAAc;AAACd,UAAAA,cAAc,EAAC,KAAKd,KAAL,CAAWW,YAAX,CAAwBR;AAAxC,SAAd;AACAoC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWa,UAAvB;AACD;;AACD,UAAG,CAAC,KAAKb,KAAL,CAAWgB,IAAf,EAAoB;AAClBuB,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,aAAKvB,QAAL,CAAc;AAAClB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACA,YAAI2C,SAAS,GAAI,KAAKrD,KAAL,CAAWM,OAAX,CAAmB6C,KAAnB,CAAjB;AACA,aAAKnD,KAAL,CAAWW,YAAX,GAA0B0C,SAA1B;AACA,aAAKzB,QAAL,CAAc;AAAChB,UAAAA,UAAU,EAACuC;AAAZ,SAAd;AACA,aAAKvB,QAAL,CAAc;AAACjB,UAAAA,YAAY,EAAG0C;AAAhB,SAAd;AACA,aAAKzB,QAAL,CAAc;AAACf,UAAAA,UAAU,EAAG,KAAKb,KAAL,CAAWW,YAAX,CAAwBT;AAAtC,SAAd;AACA,aAAK0B,QAAL,CAAc;AAACd,UAAAA,cAAc,EAAC,KAAKd,KAAL,CAAWW,YAAX,CAAwBR;AAAxC,SAAd;AACAoC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWa,UAAvB;AACD;AACF,KA5L2B;;AAAA,SA6L5ByC,MA7L4B,GA6LlBH,KAAD,IAAW;AAClB,UAAG,KAAKnD,KAAL,CAAWa,UAAX,IAAyB,KAAKb,KAAL,CAAWgB,IAAvC,EAA4C;AACxC,YAAIf,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBkD,KAAhB,CAAX,CADwC,CAExC;AACA;AACA;AACA;;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYvC,IAAI,CAACsD,GAAjB;AACA,cAAM9C,OAAO,GAAE;AAACP,UAAAA,IAAI,EAAG,KAAKF,KAAL,CAAWa,UAAnB;AACdV,UAAAA,KAAK,EAAG,KAAKH,KAAL,CAAWc,cADL;AAEdV,UAAAA,IAAI,EAAG,KAFO;AAEDZ,UAAAA,IAAI,EAAGC;AAFN,SAAf;AAIA8C,QAAAA,OAAO,CAACC,GAAR,CAAYvC,IAAI,CAACC,IAAjB;AACAgC,QAAAA,KAAK,CAAC,gCAAgCjC,IAAI,CAACsD,GAAtC,EAA2C;AAC5CX,UAAAA,MAAM,EAAE,KADoC;AAE5CC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFmC;AAG5CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevC,OAAf;AAHsC,SAA3C,CAAL,CAKG0B,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B,EADY,CAGZ;;AACA,eAAKL,OAAL;AACD,SAXH;AAYE,aAAKL,QAAL,CAAc;AAAClB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACL;;AACD,UAAG,KAAKV,KAAL,CAAWa,UAAX,IAAyB,CAAC,KAAKb,KAAL,CAAWgB,IAAxC,EAA6C;AACzC,YAAIf,IAAI,GAAG,KAAKD,KAAL,CAAWM,OAAX,CAAmB6C,KAAnB,CAAX,CADyC,CAEzC;AACA;AACA;AACA;;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYvC,IAAI,CAACsD,GAAjB;AACA,cAAM9C,OAAO,GAAE;AAACP,UAAAA,IAAI,EAAG,KAAKF,KAAL,CAAWa,UAAnB;AACdV,UAAAA,KAAK,EAAG,KAAKH,KAAL,CAAWc,cADL;AAEdV,UAAAA,IAAI,EAAG,KAFO;AAEDZ,UAAAA,IAAI,EAAGC;AAFN,SAAf;AAIA8C,QAAAA,OAAO,CAACC,GAAR,CAAYvC,IAAI,CAACC,IAAjB;AACAgC,QAAAA,KAAK,CAAC,+BAA+BjC,IAAI,CAACsD,GAArC,EAA0C;AAC3CX,UAAAA,MAAM,EAAE,KADmC;AAE3CC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFkC;AAG3CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevC,OAAf;AAHqC,SAA1C,CAAL,CAKG0B,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B,EADY,CAGZ;;AACA,eAAKL,OAAL;AACD,SAXH;AAYE,aAAKL,QAAL,CAAc;AAAClB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACL;AACF,KAlP2B;;AAAA,SAmP1B8C,QAnP0B,GAmPdL,KAAD,IAAW;AACpB,UAAG,KAAKnD,KAAL,CAAWgB,IAAd,EAAmB;AACjBuB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWC,IAAX,CAAgBkD,KAAhB,CAAZ;AACA,YAAIlD,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,YAAII,MAAM,GAAGJ,IAAI,CAACkD,KAAD,CAAjB;;AACA,YAAG9C,MAAM,CAACA,MAAP,KAAkB,KAArB,EAA2B;AACzBA,UAAAA,MAAM,CAACA,MAAP,GAAgB,IAAhB;AACAA,UAAAA,MAAM,CAACU,eAAP,GAAyB,gBAAzB;AAED,SAJD,MAKI;AACFV,UAAAA,MAAM,CAACA,MAAP,GAAgB,KAAhB;AACAA,UAAAA,MAAM,CAACU,eAAP,GAAyB,iBAAzB;AAED;;AACDwB,QAAAA,OAAO,CAACC,GAAR,CAAYnC,MAAM,CAACA,MAAnB;AACA,aAAKuB,QAAL,CAAc;AAAC3B,UAAAA;AAAD,SAAd;AACAsC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAWC,IAAvB;AACD;;AACD,UAAG,CAAC,KAAKD,KAAL,CAAWgB,IAAf,EAAoB;AAClB,YAAIf,IAAI,GAAG,KAAKD,KAAL,CAAWM,OAAtB;AACA,YAAID,MAAM,GAAGJ,IAAI,CAACkD,KAAD,CAAjB;;AACA,YAAG9C,MAAM,CAACA,MAAP,KAAkB,KAArB,EAA2B;AACzBA,UAAAA,MAAM,CAACA,MAAP,GAAgB,IAAhB;AACAA,UAAAA,MAAM,CAACU,eAAP,GAAyB,gBAAzB;AAED,SAJD,MAKI;AACFV,UAAAA,MAAM,CAACA,MAAP,GAAgB,KAAhB;AACAA,UAAAA,MAAM,CAACU,eAAP,GAAyB,iBAAzB;AAED;;AACDwB,QAAAA,OAAO,CAACC,GAAR,CAAYnC,MAAM,CAACA,MAAnB;AACA,aAAKuB,QAAL,CAAc;AAACtB,UAAAA,OAAO,EAACL;AAAT,SAAd;AAED;AACF,KAvRyB;;AAAA,SA2R5Be,IA3R4B,GA2RpBA,IAAD,IAAU;AACf,UAAIA,IAAI,KAAK,MAAb,EAAoB;AAClB,aAAKY,QAAL,CAAc;AAACZ,UAAAA,IAAI,EAAC;AAAN,SAAd;AACA,aAAKY,QAAL,CAAc;AAACX,UAAAA,MAAM,EAACD;AAAR,SAAd;AACD;;AACD,UAAIA,IAAI,KAAK,SAAb,EAAuB;AACrB,aAAKY,QAAL,CAAc;AAACZ,UAAAA,IAAI,EAAC;AAAN,SAAd;AACA,aAAKY,QAAL,CAAc;AAACX,UAAAA,MAAM,EAACD;AAAR,SAAd;AACA,aAAKY,QAAL,CAAc;AAACV,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACD;AACF,KArS2B;AAAA;;AAwR5BuC,EAAAA,iBAAiB,GAAE;AACjB,SAAKxB,OAAL;AACD;;AAcDyB,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAG,WAAlB;AACA,MAAA,MAAM,EAAGC,CAAD,IAAM,KAAKlC,MAAL,CAAYkC,CAAZ,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CAHF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAK3D,KAAL,CAAWC,IAAX,KAAoB,CAApB,IAAyB,KAAKD,KAAL,CAAWgB,IAArC,GAA6C,KAAKhB,KAAL,CAAWC,IAAX,CAAgB2D,GAAhB,CAAoB,CAAC5C,IAAD,EAAMmC,KAAN,kBAE9D;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAG,WAA7B;AAAyC,MAAA,EAAE,EAAGnC,IAAI,CAACX,MAAN,GAAe,aAAf,GAA+B,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,MAAK,KAAKmD,QAAL,CAAcL,KAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiEnC,IAAI,CAACd,IAAtE,CADF,eACoF;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBc,IAAI,CAACxB,IAA7B,MADpF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAK0D,YAAL,CAAkBC,KAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDnC,IAAI,CAACZ,IAAL,gBAAU,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAA4C,MAAA,MAAM,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,gBAAmE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAA4C,MAAA,MAAM,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArH,CAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAK,KAAK6C,UAAL,CAAgBjC,IAAI,CAACuC,GAArB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAK,KAAKH,SAAL,CAAeD,KAAf,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAGnC,IAAI,CAACX,MAAN,GAAe,aAAf,GAA+B,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8EW,IAAI,CAACX,MAAN,GAAc,KAAKL,KAAL,CAAWC,IAAX,CAAgBkD,KAAhB,EAAuBhD,KAArC,GAA4C,EAAzH,CANF,CAF0C,CAA7C,GAaM,KAAKH,KAAL,CAAWM,OAAX,CAAmBsD,GAAnB,CAAuB,CAAC5C,IAAD,EAAMmC,KAAN,kBAExB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAG,wBAA7B;AAAsD,MAAA,EAAE,EAAGnC,IAAI,CAACX,MAAN,GAAe,aAAf,GAA+B,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,MAAK,KAAKmD,QAAL,CAAcL,KAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiEnC,IAAI,CAACd,IAAtE,CADA,eACkF;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBc,IAAI,CAACxB,IAA7B,MADlF,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAK0D,YAAL,CAAkBC,KAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDnC,IAAI,CAACZ,IAAL,gBAAU,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAA4C,MAAA,MAAM,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,gBAAmE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAA4C,MAAA,MAAM,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArH,CAFA,eAGA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAK,KAAK6C,UAAL,CAAgBjC,IAAI,CAACuC,GAArB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAK,KAAKH,SAAL,CAAeD,KAAf,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAMA;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAGnC,IAAI,CAACX,MAAN,GAAe,aAAf,GAA+B,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8EW,IAAI,CAACX,MAAN,GAAc,KAAKL,KAAL,CAAWM,OAAX,CAAmB6C,KAAnB,EAA0BhD,KAAxC,GAA+C,EAA5H,CANA,CAFC,CAdP,CAJF,eAiCE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,eAA/B;AAA8C,MAAA,SAAS,EAAC,YAAxD;AAAqE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWO,KAAvF;AAA8F,MAAA,QAAQ,EAAE,KAAKoB,aAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eACwI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxI,eACiJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjJ,eAEI;AAAU,MAAA,SAAS,EAAC,aAApB;AAAkC,MAAA,WAAW,EAAC,WAA9C;AAA0D,MAAA,IAAI,EAAC,SAA/D;AAAyE,MAAA,IAAI,EAAC,GAA9E;AAAkF,MAAA,IAAI,EAAC,IAAvF;AAA4F,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWQ,SAA9G;AAAyH,MAAA,QAAQ,EAAE,KAAKsB,iBAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb,eAII;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAA8C,MAAA,OAAO,EAAE,MAAK,KAAKW,SAAL,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAjCF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCF,eAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EAyCI,KAAKzC,KAAL,CAAWU,KAAZ,gBACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAC,MAAjC;AACA,MAAA,WAAW,EAAGU,KAAD,IAAS,KAAKD,WAAL,CAAiBC,KAAjB,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,YAA7B;AAA0C,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWa,UAA5D;AAAwE,MAAA,QAAQ,EAAE,KAAKkB,kBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,eAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,eAQG;AAAU,MAAA,SAAS,EAAC,aAApB;AAAkC,MAAA,WAAW,EAAC,WAA9C;AAA0D,MAAA,IAAI,EAAC,SAA/D;AAAyE,MAAA,IAAI,EAAC,GAA9E;AAAkF,MAAA,IAAI,EAAC,IAAvF;AAA4F,MAAA,QAAQ,EAAE,KAAKC,sBAA3G;AAAmI,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWc,cAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsK,KAAKd,KAAL,CAAWc,cAAjL,CARH,eASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATH,eAUG;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAK,KAAKwC,MAAL,CAAY,KAAKtD,KAAL,CAAWY,UAAvB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH,CADA,gBAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDL,eA0DE;AAAK,MAAA,EAAE,EAAG,KAAKZ,KAAL,CAAWiB,MAAX,KAAsB,MAAvB,GAAgC,QAAhC,GAAyC,MAAlD;AAA0D,MAAA,SAAS,EAAC,MAApE;AAA2E,MAAA,OAAO,EAAE,MAAI,KAAKD,IAAL,CAAU,MAAV,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1DF,eA2DE;AAAK,MAAA,EAAE,EAAG,KAAKhB,KAAL,CAAWiB,MAAX,KAAsB,SAAvB,GAAmC,QAAnC,GAA4C,MAArD;AAA6D,MAAA,SAAS,EAAC,SAAvE;AAAkF,MAAA,OAAO,EAAE,MAAI,KAAKD,IAAL,CAAU,SAAV,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3DF,CADF,CADF,CADF;AAmED;;AA7W2B;;AA+W5B,eAAejB,IAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport './Home.css';\n\n\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\nvar date = new Date().toJSON().slice(5,10);\nvar time = new Date().toJSON().slice(11,16)\nvar dateTime = date+' '+time;\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nclass Home extends Component{\n  \n\n\nstate = {\n  list: [{text: \"Buy eggs\", notes:'empty',done: false,toggle:false},\n  {text: \"Buy milk\", notes:'empty',done: true,toggle:false},\n  ],\n  grocery:[],\n  input: '',\n\n  textInput:'',\n  newList: [],\n  modal:false,\n  modalContent:[],\n  modalIndex:null,\n  modalInput:\"\",\n  modalTextInput:'',\n  toggle:false,\n  todoItemClicked:false,\n  todo:true,\n  active:'todo',\n  todoListItems: 'todo-list-items'\n  }\n\nonDragStart = (event) => {\n    event.dataTransfer.setData('text',event.target.id)\n    \n}\n\nonDrop = (event) => {\n  event.dataTransfer.setData(\"text\", event.target.id);\n  event.preventDefault();\n  \n   \n}\n\nonInputChange = (event) => {\n\n  this.setState({input:event.target.value})\n}\nonTextInputChange = (event) => {\n  this.setState({textInput:event.target.value})\n}\nonModalInputChange = (event) => {\n\n  this.setState({modalInput:event.target.value})\n}\nonModalTextInputChange = (event) => {\n  this.setState({modalTextInput:event.target.value})\n}\nonFetch = () => {\n  fetch('/api/mongodb/todolist/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({list:data})\n  })\n  fetch('/api/mongodb/grocery/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({grocery:data})\n  })\n}\nonClicked = () => {\n  if(this.state.input && this.state.todo){\n      \n      console.log(this.state.input)\n      this.setState(prevState => ({\n        list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch('/api/mongodb/todolist/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      console.log(this.state.list)\n      this.setState({input:''})\n      this.setState({textInput:''})\n\n      }\n    if(this.state.input && !this.state.todo){\n      console.log('grocery')\n      console.log(this.state.input)\n      this.setState(prevState => ({\n        grocery: [...prevState.grocery, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch('/api/mongodb/grocery/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      console.log(this.state.grocery)\n      this.setState({input:''})\n      this.setState({textInput:''})\n    }\n  \n}\n\ndeleteItem = (id) => {\n  if(this.state.todo){\n    fetch('/api/mongodb/todolist/?_id=' + id, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('deleted',id)\n      this.onFetch()\n    })\n  }\n  if(!this.state.todo){\n    fetch('/api/mongodb/grocery/?_id=' + id, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('deleted',id)\n      this.onFetch()\n    })\n  }\n  \n}\nchangeToDone = (index) => {\n  console.log(this.state.list[index].done)\n  let list = this.state.list\n  let done = this.state.list[index]\n  \n  if(done.done === false){\n    done.done = true\n    console.log(done.done)\n    done.todoItemClicked = 'todo-item-true'\n  }\n  else{\n    done.done = false\n    console.log(done.done)\n    done.todoItemClicked = 'todo-item-false'\n  }\n  \n  this.setState({list})\n}\nshowModal = index => {\n  if(this.state.todo){\n    console.log(index)\n    this.setState({modal:true})\n    let modalList = (this.state.list[index])\n    this.state.modalContent = modalList\n    this.setState({modalIndex:index})\n    this.setState({modalContent : modalList})\n    this.setState({modalInput : this.state.modalContent.text})\n    this.setState({modalTextInput:this.state.modalContent.notes})\n    console.log(this.state.modalInput)\n  }\n  if(!this.state.todo){\n    console.log(index)\n    this.setState({modal:true})\n    let modalList = (this.state.grocery[index])\n    this.state.modalContent = modalList\n    this.setState({modalIndex:index})\n    this.setState({modalContent : modalList})\n    this.setState({modalInput : this.state.modalContent.text})\n    this.setState({modalTextInput:this.state.modalContent.notes})\n    console.log(this.state.modalInput)\n  }\n}\nonEdit = (index) => {\n  if(this.state.modalInput && this.state.todo){\n      let list = this.state.list[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch('/api/mongodb/todolist/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n  if(this.state.modalInput && !this.state.todo){\n      let list = this.state.grocery[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch('/api/mongodb/grocery/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n}\n  onToggle = (index) => {\n    if(this.state.todo){\n      console.log(this.state.list[index])\n      let list = this.state.list\n      let toggle = list[index]\n      if(toggle.toggle === false){\n        toggle.toggle = true\n        toggle.todoItemClicked = 'todo-item-true'\n        \n      }\n      else{\n        toggle.toggle = false\n        toggle.todoItemClicked = 'todo-item-false'\n        \n      }\n      console.log(toggle.toggle)\n      this.setState({list})\n      console.log(this.state.list)\n    }\n    if(!this.state.todo){\n      let list = this.state.grocery\n      let toggle = list[index]\n      if(toggle.toggle === false){\n        toggle.toggle = true\n        toggle.todoItemClicked = 'todo-item-true'\n        \n      }\n      else{\n        toggle.toggle = false\n        toggle.todoItemClicked = 'todo-item-false'\n        \n      }\n      console.log(toggle.toggle)\n      this.setState({grocery:list})\n\n    }\n  }\ncomponentDidMount(){\n  this.onFetch()\n}\ntodo = (todo) => {\n  if (todo === 'todo'){\n    this.setState({todo:true})\n    this.setState({active:todo})\n  }\n  if (todo === 'grocery'){\n    this.setState({todo:false})\n    this.setState({active:todo})\n    this.setState({todoListItems: 'todo-list-items grocery-true'})\n  }\n}\n\n\nrender() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div  className = \"todo-list\"\n        onDrop={(e)=> this.onDrop(e)}\n        >\n          <h1><span>To Do List</span></h1>   \n          <div className='todo-list-items'>     \n          {(this.state.list !== 0 && this.state.todo)? (this.state.list.map((todo,index)=>\n              \n              <div key={index} className = \"todo-item\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.list[index].notes:('')}</div>\n              </div>\n              \n              \n              )):(\n                (this.state.grocery.map((todo,index)=>\n\n                <div key={index} className = \"todo-item grocery-true\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.grocery[index].notes:('')}</div>\n              </div>\n                \n                ))\n                )\n              }\n          </div> \n          <div className='input'>\n              <input type='text' placeholder='add todo item'className='input-item' value={this.state.input} onChange={this.onInputChange}></input><br></br><br></br>\n              <textarea className='input-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"20\" value={this.state.textInput} onChange={this.onTextInputChange}></textarea>\n              <br></br><br></br>\n              <input type='submit' className='input-button' onClick={()=> this.onClicked()} ></input>\n          </div>\n          <br></br>\n          <br></br>\n          {(this.state.modal)?(\n           <div className='modal' draggable='true'\n           onDragStart={(event)=>this.onDragStart(event)}>\n           \n              <input type='text' className='modal-text' value={this.state.modalInput} onChange={this.onModalInputChange}></input>\n\n              <br></br>\n              <br></br>\n\n              <textarea className='modal-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"30\" onChange={this.onModalTextInputChange} value={this.state.modalTextInput}>{this.state.modalTextInput}</textarea>\n              <br></br>\n              <button className='modal-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</button>\n              \n           \n           </div>\n          ):(<div></div>)\n          }\n          <div id={(this.state.active === 'todo')? \"active\":\"none\"} className=\"todo\" onClick={()=>this.todo('todo')}>Todo List</div>\n          <div id={(this.state.active === 'grocery')? \"active\":\"none\"} className=\"grocery\"  onClick={()=>this.todo('grocery')}> Grocery</div>\n        </div>\n      </header>\n    </div>\n  );\n}\n}\nexport default Home;\n\n//   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n    \n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n    \n//     localStorage.setItem('user', userJSON)\n\n\n// }"]},"metadata":{},"sourceType":"module"}