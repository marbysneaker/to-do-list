{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\n\nconst Emoji = props => /*#__PURE__*/React.createElement(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": props.label ? props.label : \"\",\n  \"aria-hidden\": props.label ? \"false\" : \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, props.symbol);\n\nvar date = new Date().toJSON().slice(5, 10);\nvar time = new Date().toJSON().slice(11, 16);\nvar dateTime = date + ' ' + time;\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        text: \"Buy eggs\",\n        notes: 'empty',\n        done: false,\n        toggle: false\n      }, {\n        text: \"Buy milk\",\n        notes: 'empty',\n        done: true,\n        toggle: false\n      }],\n      input: '',\n      textInput: '',\n      newList: [],\n      modal: false,\n      modalContent: [],\n      modalIndex: null,\n      modalInput: \"\",\n      modalTextInput: '',\n      toggle: false,\n      todoItemClicked: false\n    };\n\n    this.handleDragEnter = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragLeave = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragOver = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDrop = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      });\n    };\n\n    this.onModalInputChange = event => {\n      this.setState({\n        modalInput: event.target.value\n      });\n    };\n\n    this.onModalTextInputChange = event => {\n      this.setState({\n        modalTextInput: event.target.value\n      });\n    };\n\n    this.onFetch = () => {\n      fetch('/api/mongodb/todolist/').then(response => response.json()).then(data => {\n        console.log('data!', data);\n        this.setState({\n          list: data\n        });\n      });\n    };\n\n    this.onClicked = () => {\n      if (this.state.input) {\n        console.log(this.state.input);\n        this.setState(prevState => ({\n          list: [...prevState.list, {\n            text: this.state.input,\n            notes: this.state.textInput,\n            done: false,\n            toggle: false,\n            time: dateTime\n          }]\n        }));\n        const formData = {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false,\n          toggle: false,\n          time: dateTime\n        };\n        fetch('/api/mongodb/todolist/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data);\n        }); // this.state.list.push({text:this.state.input, done: false})\n\n        console.log(this.state.list);\n        this.setState({\n          input: ''\n        });\n        this.setState({\n          textInput: ''\n        });\n      }\n\n      console.log(this.state.list);\n      sleep(5000);\n      console.log(this.state.buttonColor);\n    };\n\n    this.deleteItem = id => {\n      fetch('/api/mongodb/todolist/?_id=' + id, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(data => {\n        console.log('deleted', id);\n        this.onFetch();\n      });\n    };\n\n    this.changeToDone = index => {\n      console.log(this.state.list[index].done);\n      let list = this.state.list;\n      let done = this.state.list[index];\n\n      if (done.done === false) {\n        done.done = true;\n        console.log(done.done);\n        done.todoItemClicked = 'todo-item-true';\n      } else {\n        done.done = false;\n        console.log(done.done);\n        done.todoItemClicked = 'todo-item-false';\n      }\n\n      this.setState({\n        list\n      });\n    };\n\n    this.showModal = index => {\n      console.log(index);\n      this.setState({\n        modal: true\n      });\n      let modalList = this.state.list[index];\n      this.state.modalContent = modalList;\n      this.setState({\n        modalIndex: index\n      });\n      this.setState({\n        modalContent: modalList\n      });\n      this.setState({\n        modalInput: this.state.modalContent.text\n      });\n      this.setState({\n        modalTextInput: this.state.modalContent.notes\n      });\n      console.log(this.state.modalInput);\n    };\n\n    this.onEdit = index => {\n      if (this.state.modalInput) {\n        let list = this.state.list[index]; // let time = this.state.list[index].time\n        // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n        // this.setState({list})\n        // console.log(index)\n\n        console.log(list._id);\n        const newList = {\n          text: this.state.modalInput,\n          notes: this.state.modalTextInput,\n          done: false,\n          time: dateTime\n        };\n        console.log(list.text);\n        fetch('/api/mongodb/todolist/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newList)\n        }).then(response => response.json()).then(data => {\n          console.log('Got this back', data); // Call method to refresh data\n\n          this.onFetch();\n        });\n        this.setState({\n          modal: false\n        });\n      }\n    };\n\n    this.onToggle = index => {\n      console.log(this.state.list[index]);\n      let list = this.state.list;\n      let toggle = list[index];\n\n      if (toggle.toggle === false) {\n        toggle.toggle = true;\n        toggle.todoItemClicked = 'todo-item-true';\n      } else {\n        toggle.toggle = false;\n        toggle.todoItemClicked = 'todo-item-false';\n      }\n\n      console.log(toggle.toggle);\n      this.setState({\n        list\n      });\n      console.log(this.state.list);\n    };\n\n    this.drag = ev => {\n      ev.dataTransfer.setData(\"text\", ev.target.id);\n    };\n  }\n\n  componentDidMount() {\n    this.onFetch();\n  }\n\n  //   componentDidMount(){\n  //     const userJSON = localStorage.getItem('user')\n  //     const user = JSON.parse(userJSON)\n  //     if (user){\n  //     console.log(user)\n  //     if (user){\n  //         for (let i of user){\n  //           i.toggle = false\n  //         }\n  //       }\n  //     this.setState({list:user})\n  //   }\n  // }\n  //   componentDidUpdate(){\n  //     // Storing to local storage\n  //     const userJSON = JSON.stringify(this.state.list)\n  //     localStorage.setItem('user', userJSON)\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, \"To Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, this.state.list !== 0 ? this.state.list.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"todo-item\",\n      id: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-text\",\n      onClick: () => this.onToggle(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 99\n      }\n    }, todo.time, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(Emoji, {\n      className: \"todo-check\",\n      label: \"sheep\",\n      symbol: \"\\u274C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 134\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => this.deleteItem(todo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"toggle\",\n      className: todo.toggle ? \"toggle-true\" : 'toggle-false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, todo.toggle ? this.state.list[index].notes : ''))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, \"Nothing to do\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"add todo item\",\n      className: \"input-item\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 147\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 156\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"input-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"20\",\n      value: this.state.textInput,\n      onChange: this.onTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"input-button\",\n      onClick: () => this.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      draggable: \"true\",\n      onDrop: e => handleDrop(e),\n      onDragOver: e => handleDragOver(e),\n      onDragEnter: e => handleDragEnter(e),\n      onDragLeave: e => handleDragLeave(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"modal-text\",\n      value: this.state.modalInput,\n      onChange: this.onModalInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"modal-notes\",\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"3\",\n      cols: \"30\",\n      onChange: this.onModalTextInputChange,\n      value: this.state.modalTextInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, this.state.modalTextInput), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"modal-button\",\n      onClick: () => this.onEdit(this.state.modalIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/to_do_react/to_do_list/client/src/Components/Home/Home.js"],"names":["React","Component","Emoji","props","label","symbol","date","Date","toJSON","slice","time","dateTime","sleep","ms","Promise","resolve","setTimeout","Home","state","list","text","notes","done","toggle","input","textInput","newList","modal","modalContent","modalIndex","modalInput","modalTextInput","todoItemClicked","handleDragEnter","e","preventDefault","stopPropagation","handleDragLeave","handleDragOver","handleDrop","onInputChange","event","setState","target","value","onTextInputChange","onModalInputChange","onModalTextInputChange","onFetch","fetch","then","response","json","data","console","log","onClicked","prevState","formData","method","headers","body","JSON","stringify","buttonColor","deleteItem","id","changeToDone","index","showModal","modalList","onEdit","_id","onToggle","drag","ev","dataTransfer","setData","componentDidMount","render","map","todo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Home.css';\n\n\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\nvar date = new Date().toJSON().slice(5,10);\nvar time = new Date().toJSON().slice(11,16)\nvar dateTime = date+' '+time;\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nclass Home extends Component{\n  \n\n\nstate = {\n  list: [{text: \"Buy eggs\", notes:'empty',done: false,toggle:false},\n  {text: \"Buy milk\", notes:'empty',done: true,toggle:false},\n  ],\n  input: '',\n  textInput:'',\n  newList: [],\n  modal:false,\n  modalContent:[],\n  modalIndex:null,\n  modalInput:\"\",\n  modalTextInput:'',\n  toggle:false,\n  todoItemClicked:false\n  }\n\nhandleDragEnter = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\nhandleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\nhandleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\nhandleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\nonInputChange = (event) => {\n\n  this.setState({input:event.target.value})\n}\nonTextInputChange = (event) => {\n  this.setState({textInput:event.target.value})\n}\nonModalInputChange = (event) => {\n\n  this.setState({modalInput:event.target.value})\n}\nonModalTextInputChange = (event) => {\n  this.setState({modalTextInput:event.target.value})\n}\nonFetch = () => {\n  fetch('/api/mongodb/todolist/')\n  .then(response => response.json())\n  .then(data => {\n    console.log('data!',data)\n    this.setState({list:data})\n  })\n}\nonClicked = () => {\n  if(this.state.input){\n      \n      console.log(this.state.input)\n      this.setState(prevState => ({\n        list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime}]\n      }))\n      const formData = {\n        text: this.state.input,notes:this.state.textInput,done:false,toggle:false,time:dateTime\n       \n      };\n    \n      fetch('/api/mongodb/todolist/', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n    \n          \n        });\n      // this.state.list.push({text:this.state.input, done: false})\n      console.log(this.state.list)\n      this.setState({input:''})\n      this.setState({textInput:''})\n  }\n  console.log(this.state.list)\n  sleep(5000)\n  console.log(this.state.buttonColor)\n  \n \n}\n\ndeleteItem = (id) => {\n  \n  fetch('/api/mongodb/todolist/?_id=' + id, {\n    method: 'DELETE',\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('deleted',id)\n    this.onFetch()\n  })\n  \n}\nchangeToDone = (index) => {\n  console.log(this.state.list[index].done)\n  let list = this.state.list\n  let done = this.state.list[index]\n  \n  if(done.done === false){\n    done.done = true\n    console.log(done.done)\n    done.todoItemClicked = 'todo-item-true'\n  }\n  else{\n    done.done = false\n    console.log(done.done)\n    done.todoItemClicked = 'todo-item-false'\n  }\n  \n  this.setState({list})\n}\nshowModal = index => {\n  console.log(index)\n  this.setState({modal:true})\n  let modalList = (this.state.list[index])\n  this.state.modalContent = modalList\n  this.setState({modalIndex:index})\n  this.setState({modalContent : modalList})\n  this.setState({modalInput : this.state.modalContent.text})\n  this.setState({modalTextInput:this.state.modalContent.notes})\n  console.log(this.state.modalInput)\n}\nonEdit = (index) => {\n  if(this.state.modalInput){\n      let list = this.state.list[index]\n      // let time = this.state.list[index].time\n      // list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false,time:dateTime})\n      // this.setState({list})\n      // console.log(index)\n      console.log(list._id)\n      const newList ={text : this.state.modalInput\n      ,notes : this.state.modalTextInput\n      ,done : false,time : dateTime}\n      \n      console.log(list.text)\n      fetch('/api/mongodb/todolist/?_id=' + list._id, {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(newList),\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Got this back', data);\n\n          // Call method to refresh data\n          this.onFetch();\n        });\n        this.setState({modal:false})\n  }\n}\n  onToggle = (index) => {\n    console.log(this.state.list[index])\n    let list = this.state.list\n    let toggle = list[index]\n    if(toggle.toggle === false){\n      toggle.toggle = true\n      toggle.todoItemClicked = 'todo-item-true'\n      \n    }\n    else{\n      toggle.toggle = false\n      toggle.todoItemClicked = 'todo-item-false'\n      \n    }\n    console.log(toggle.toggle)\n    this.setState({list})\n    console.log(this.state.list)\n  }\ncomponentDidMount(){\n  this.onFetch()\n}\ndrag = (ev) => {\n  ev.dataTransfer.setData(\"text\", ev.target.id);\n}\n//   componentDidMount(){\n//     const userJSON = localStorage.getItem('user')\n//     const user = JSON.parse(userJSON)\n//     if (user){\n    \n//     console.log(user)\n//     if (user){\n//         for (let i of user){\n//           i.toggle = false\n//         }\n//       }\n//     this.setState({list:user})\n//   }\n// }\n//   componentDidUpdate(){\n//     // Storing to local storage\n//     const userJSON = JSON.stringify(this.state.list)\n    \n//     localStorage.setItem('user', userJSON)\n\n\n// }\n\nrender() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className = \"todo-list\">\n          <h1><span>To Do List</span></h1>   \n          <div className='todo-list-items'>     \n          {(this.state.list !== 0)? (this.state.list.map((todo,index)=>\n              \n              <div key={index} className = \"todo-item\" id={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>\n                <span className='todo-text' onClick={()=> this.onToggle(index)}>{todo.text}</span><span className='time'>{todo.time} </span>\n                <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji className='todo-check' label=\"sheep\" symbol=\"✅\"/>:<Emoji className='todo-check' label=\"sheep\" symbol='❌'/>}</button>\n                <button className='delete' onClick={()=> this.deleteItem(todo._id)}>Delete</button>\n                <button className='toggle-button' onClick={()=> this.showModal(index)}>Edit</button>\n                \n                <div id=\"toggle\" className={(todo.toggle)?(\"toggle-true\"):('toggle-false')}>{(todo.toggle)?this.state.list[index].notes:('')}</div>\n              </div>\n              \n              \n              )):(<div>Nothing to do</div>)\n              }\n          </div> \n          <div className='input'>\n              <input type='text' placeholder='add todo item'className='input-item' value={this.state.input} onChange={this.onInputChange}></input><br></br><br></br>\n              <textarea className='input-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"20\" value={this.state.textInput} onChange={this.onTextInputChange}></textarea>\n              <br></br><br></br>\n              <input type='submit' className='input-button' onClick={()=> this.onClicked()} ></input>\n          </div>\n          <br></br>\n          <br></br>\n          {(this.state.modal)?(\n           <div className='modal' draggable='true' \n           onDrop={e => handleDrop(e)}\n           onDragOver={e => handleDragOver(e)}\n           onDragEnter={e => handleDragEnter(e)}\n           onDragLeave={e => handleDragLeave(e)}\n           >\n              <input type='text' className='modal-text' value={this.state.modalInput} onChange={this.onModalInputChange}></input>\n\n              <br></br>\n              <br></br>\n\n              <textarea className='modal-notes' placeholder='add notes' name=\"message\" rows=\"3\" cols=\"30\" onChange={this.onModalTextInputChange} value={this.state.modalTextInput}>{this.state.modalTextInput}</textarea>\n              <br></br>\n              <button className='modal-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</button>\n              \n           \n           </div>\n          ):(<div></div>)\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n}\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}