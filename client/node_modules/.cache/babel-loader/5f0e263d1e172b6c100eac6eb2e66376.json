{"ast":null,"code":"var _jsxFileName = \"/Users/marbypangilinan/Desktop/to_do_react/to_do_list/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Emoji = props => /*#__PURE__*/React.createElement(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": props.label ? props.label : \"\",\n  \"aria-hidden\": props.label ? \"false\" : \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, props.symbol);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        text: \"Buy eggs\",\n        notes: 'empty',\n        done: false\n      }, {\n        text: \"Buy milk\",\n        notes: 'empty',\n        done: true\n      }],\n      input: '',\n      textInput: '',\n      newList: [],\n      modal: false,\n      modalContent: [],\n      modalIndex: null,\n      modalInput: \"\",\n      modalTextInput: ''\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      });\n    };\n\n    this.onModalInputChange = event => {\n      this.setState({\n        modalInput: event.target.value\n      });\n    };\n\n    this.onModalTextInputChange = event => {\n      this.setState({\n        modalTextInput: event.target.value\n      });\n    };\n\n    this.onClicked = () => {\n      console.log(this.state.input);\n      this.setState(prevState => ({\n        list: [...prevState.list, {\n          text: this.state.input,\n          notes: this.state.textInput,\n          done: false\n        }]\n      })); // this.state.list.push({text:this.state.input, done: false})\n\n      console.log(this.state.list);\n      this.setState({\n        input: ''\n      });\n      this.setState({\n        textInput: ''\n      });\n    };\n\n    this.deleteItem = index => {\n      let arr = this.state.list;\n      arr.splice(index, 1);\n      this.setState({\n        list: arr\n      });\n      console.log(this.state.list.length);\n    };\n\n    this.changeToDone = index => {\n      console.log(this.state.list[index].done);\n      let list = this.state.list;\n      let done = this.state.list[index];\n\n      if (done.done === false) {\n        done.done = true;\n        console.log(done.done);\n      } else {\n        done.done = false;\n        console.log(done.done);\n      }\n\n      this.setState({\n        list\n      });\n    };\n\n    this.showModal = index => {\n      console.log(index);\n      this.setState({\n        modal: true\n      });\n      let modalList = this.state.list[index];\n      this.state.modalContent = modalList;\n      console.log(this.state.modalContent);\n      console.log(this.state.modalContent.text);\n      this.setState({\n        modalIndex: index\n      });\n      this.setState({\n        modalContent: modalList\n      });\n      this.setState({\n        modalInput: this.state.modalContent.text\n      });\n      console.log(this.state.modalInput);\n    };\n\n    this.onEdit = index => {\n      let list = this.state.list;\n      list.splice(index, 1, {\n        text: this.state.modalInput,\n        notes: this.state.modalTextInput,\n        done: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"To Do List\"), this.state.list != 0 ? this.state.list.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, todo.text, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeToDone(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, todo.done ? /*#__PURE__*/React.createElement(Emoji, {\n      label: \"sheep\",\n      symbol: \"\\u2705\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 75\n      }\n    }) : '❌'), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onClicked(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Delete\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"Nothing to do\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"todo-item\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 119\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 128\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"10\",\n      cols: \"30\",\n      value: this.state.textInput,\n      onChange: this.onTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"todo-button\",\n      onClick: () => this.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), this.state.modal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"modal-tex\",\n      value: this.state.modalInput,\n      onChange: this.onModalInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"add notes\",\n      name: \"message\",\n      rows: \"10\",\n      cols: \"30\",\n      value: this.state.modalContent.notes,\n      onChange: this.onModalTextInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, this.state.modalContent.notes), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"modal-button\",\n      onClick: () => this.onEdit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default App; // <input type='text' className='modal-tex' value={this.state.list[this.state.modalIndex].text} onChange={this.onModalInputChange}></input>\n// <input type='submit' className='todo-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</input>","map":{"version":3,"sources":["/Users/marbypangilinan/Desktop/to_do_react/to_do_list/src/App.js"],"names":["React","Component","Emoji","props","label","symbol","App","state","list","text","notes","done","input","textInput","newList","modal","modalContent","modalIndex","modalInput","modalTextInput","onInputChange","event","setState","target","value","onTextInputChange","onModalInputChange","onModalTextInputChange","onClicked","console","log","prevState","deleteItem","index","arr","splice","length","changeToDone","showModal","modalList","onEdit","render","map","todo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nconst Emoji = props => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\n\n\n\nclass App extends Component{\n\n\nstate = {\n  list: [{text: \"Buy eggs\", notes:'empty',done: false},\n  {text: \"Buy milk\", notes:'empty',done: true},\n  ],\n  input: '',\n  textInput:'',\n  newList: [],\n  modal:false,\n  modalContent:[],\n  modalIndex:null,\n  modalInput:\"\",\n  modalTextInput:''\n  }\nonInputChange = (event) => {\n\n  this.setState({input:event.target.value})\n}\nonTextInputChange = (event) => {\n  this.setState({textInput:event.target.value})\n}\nonModalInputChange = (event) => {\n\n  this.setState({modalInput:event.target.value})\n}\nonModalTextInputChange = (event) => {\n  this.setState({modalTextInput:event.target.value})\n}\nonClicked = () => {\n  console.log(this.state.input)\n  this.setState(prevState => ({\n    list: [...prevState.list, {text: this.state.input,notes:this.state.textInput,done:false}]\n  }))\n  // this.state.list.push({text:this.state.input, done: false})\n  console.log(this.state.list)\n  this.setState({input:''})\n  this.setState({textInput:''})\n\n}\n// componentDidMount = () => {\n//   let newData = this.state.list\n//   this.setState({newList:newData})\n//   console.log(this.state.newList)\n//   this.forceUpdate()\n// }\ndeleteItem = (index) => {\n  let arr = this.state.list\n  arr.splice(index,1)\n  this.setState({list:arr})\n  console.log(this.state.list.length)\n  \n}\nchangeToDone = (index) => {\n  console.log(this.state.list[index].done)\n  let list = this.state.list\n  let done = this.state.list[index]\n  \n  if(done.done === false){\n    done.done = true\n    console.log(done.done)\n  }\n  else{\n    done.done = false\n    console.log(done.done)\n  }\n  \n  this.setState({list})\n}\nshowModal = index => {\n  console.log(index)\n  this.setState({modal:true})\n  let modalList = (this.state.list[index])\n  this.state.modalContent = modalList\n  console.log(this.state.modalContent)\n  console.log(this.state.modalContent.text)\n  this.setState({modalIndex:index})\n  this.setState({modalContent : modalList})\n  this.setState({modalInput : this.state.modalContent.text})\n  console.log(this.state.modalInput)\n}\nonEdit = (index) => {\n  let list = this.state.list\n  list.splice(index, 1 , {text:this.state.modalInput,notes:this.state.modalTextInput,done:false})\n}\n\nrender() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className = \"todo-list\">\n          <h1>To Do List</h1>         \n          {(this.state.list != 0)? (this.state.list.map((todo,index)=>\n              <div key={index} ><span onClick={()=> this.showModal(index)}>{todo.text} </span>\n              <button onClick={() => this.changeToDone(index)}>{todo.done?<Emoji label=\"sheep\" symbol=\"✅\"/>:'❌'}</button>\n              <button onClick={()=> this.onClicked(index)}>Delete</button></div>\n              )):(<div>Nothing to do</div>)}\n          <div className='input'>\n              <input type='text' className='todo-item' value={this.state.input} onChange={this.onInputChange}></input><br></br><br></br>\n              <textarea placeholder='add notes' name=\"message\" rows=\"10\" cols=\"30\" value={this.state.textInput} onChange={this.onTextInputChange}></textarea>\n              <br></br><br></br>\n              <input type='submit' className='todo-button' onClick={()=> this.onClicked()}></input>\n          </div>\n          <br></br>\n          <br></br>\n          {(this.state.modal)?(\n           <div className='modal'>\n              <br></br>\n              <br></br>\n              <input type='text' className='modal-tex' value={this.state.modalInput} onChange={this.onModalInputChange}></input>\n\n              <br></br>\n              <br></br>\n\n              <textarea placeholder='add notes' name=\"message\" rows=\"10\" cols=\"30\" value={this.state.modalContent.notes} onChange={this.onModalTextInputChange}>{this.state.modalContent.notes}</textarea>\n              <br></br>\n              <br></br>\n\n              <input type='submit' className='modal-button' onClick={()=> this.onEdit()}>Edit</input>\n              \n           \n           </div>\n          ):(<div></div>)\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n}\nexport default App;\n\n\n// <input type='text' className='modal-tex' value={this.state.list[this.state.modalIndex].text} onChange={this.onModalInputChange}></input>\n\n// <input type='submit' className='todo-button' onClick={()=> this.onEdit(this.state.modalIndex)}>Edit</input>"]},"metadata":{},"sourceType":"module"}